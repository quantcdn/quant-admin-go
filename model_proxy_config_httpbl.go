/*
QuantCDN Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ProxyConfigHttpbl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProxyConfigHttpbl{}

// ProxyConfigHttpbl struct for ProxyConfigHttpbl
type ProxyConfigHttpbl struct {
	HttpblEnabled bool `json:"httpbl_enabled"`
	ApiKey *string `json:"api_key,omitempty"`
	BlockSuspicious bool `json:"block_suspicious"`
	BlockHarvester bool `json:"block_harvester"`
	BlockSpam bool `json:"block_spam"`
	BlockSearchEngine bool `json:"block_search_engine"`
}

type _ProxyConfigHttpbl ProxyConfigHttpbl

// NewProxyConfigHttpbl instantiates a new ProxyConfigHttpbl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProxyConfigHttpbl(httpblEnabled bool, blockSuspicious bool, blockHarvester bool, blockSpam bool, blockSearchEngine bool) *ProxyConfigHttpbl {
	this := ProxyConfigHttpbl{}
	this.HttpblEnabled = httpblEnabled
	this.BlockSuspicious = blockSuspicious
	this.BlockHarvester = blockHarvester
	this.BlockSpam = blockSpam
	this.BlockSearchEngine = blockSearchEngine
	return &this
}

// NewProxyConfigHttpblWithDefaults instantiates a new ProxyConfigHttpbl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProxyConfigHttpblWithDefaults() *ProxyConfigHttpbl {
	this := ProxyConfigHttpbl{}
	var httpblEnabled bool = false
	this.HttpblEnabled = httpblEnabled
	var blockSuspicious bool = false
	this.BlockSuspicious = blockSuspicious
	var blockHarvester bool = false
	this.BlockHarvester = blockHarvester
	var blockSpam bool = false
	this.BlockSpam = blockSpam
	var blockSearchEngine bool = false
	this.BlockSearchEngine = blockSearchEngine
	return &this
}

// GetHttpblEnabled returns the HttpblEnabled field value
func (o *ProxyConfigHttpbl) GetHttpblEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HttpblEnabled
}

// GetHttpblEnabledOk returns a tuple with the HttpblEnabled field value
// and a boolean to check if the value has been set.
func (o *ProxyConfigHttpbl) GetHttpblEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HttpblEnabled, true
}

// SetHttpblEnabled sets field value
func (o *ProxyConfigHttpbl) SetHttpblEnabled(v bool) {
	o.HttpblEnabled = v
}

// GetApiKey returns the ApiKey field value if set, zero value otherwise.
func (o *ProxyConfigHttpbl) GetApiKey() string {
	if o == nil || IsNil(o.ApiKey) {
		var ret string
		return ret
	}
	return *o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProxyConfigHttpbl) GetApiKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ApiKey) {
		return nil, false
	}
	return o.ApiKey, true
}

// HasApiKey returns a boolean if a field has been set.
func (o *ProxyConfigHttpbl) HasApiKey() bool {
	if o != nil && !IsNil(o.ApiKey) {
		return true
	}

	return false
}

// SetApiKey gets a reference to the given string and assigns it to the ApiKey field.
func (o *ProxyConfigHttpbl) SetApiKey(v string) {
	o.ApiKey = &v
}

// GetBlockSuspicious returns the BlockSuspicious field value
func (o *ProxyConfigHttpbl) GetBlockSuspicious() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BlockSuspicious
}

// GetBlockSuspiciousOk returns a tuple with the BlockSuspicious field value
// and a boolean to check if the value has been set.
func (o *ProxyConfigHttpbl) GetBlockSuspiciousOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockSuspicious, true
}

// SetBlockSuspicious sets field value
func (o *ProxyConfigHttpbl) SetBlockSuspicious(v bool) {
	o.BlockSuspicious = v
}

// GetBlockHarvester returns the BlockHarvester field value
func (o *ProxyConfigHttpbl) GetBlockHarvester() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BlockHarvester
}

// GetBlockHarvesterOk returns a tuple with the BlockHarvester field value
// and a boolean to check if the value has been set.
func (o *ProxyConfigHttpbl) GetBlockHarvesterOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockHarvester, true
}

// SetBlockHarvester sets field value
func (o *ProxyConfigHttpbl) SetBlockHarvester(v bool) {
	o.BlockHarvester = v
}

// GetBlockSpam returns the BlockSpam field value
func (o *ProxyConfigHttpbl) GetBlockSpam() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BlockSpam
}

// GetBlockSpamOk returns a tuple with the BlockSpam field value
// and a boolean to check if the value has been set.
func (o *ProxyConfigHttpbl) GetBlockSpamOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockSpam, true
}

// SetBlockSpam sets field value
func (o *ProxyConfigHttpbl) SetBlockSpam(v bool) {
	o.BlockSpam = v
}

// GetBlockSearchEngine returns the BlockSearchEngine field value
func (o *ProxyConfigHttpbl) GetBlockSearchEngine() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.BlockSearchEngine
}

// GetBlockSearchEngineOk returns a tuple with the BlockSearchEngine field value
// and a boolean to check if the value has been set.
func (o *ProxyConfigHttpbl) GetBlockSearchEngineOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlockSearchEngine, true
}

// SetBlockSearchEngine sets field value
func (o *ProxyConfigHttpbl) SetBlockSearchEngine(v bool) {
	o.BlockSearchEngine = v
}

func (o ProxyConfigHttpbl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProxyConfigHttpbl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["httpbl_enabled"] = o.HttpblEnabled
	if !IsNil(o.ApiKey) {
		toSerialize["api_key"] = o.ApiKey
	}
	toSerialize["block_suspicious"] = o.BlockSuspicious
	toSerialize["block_harvester"] = o.BlockHarvester
	toSerialize["block_spam"] = o.BlockSpam
	toSerialize["block_search_engine"] = o.BlockSearchEngine
	return toSerialize, nil
}

func (o *ProxyConfigHttpbl) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"httpbl_enabled",
		"block_suspicious",
		"block_harvester",
		"block_spam",
		"block_search_engine",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProxyConfigHttpbl := _ProxyConfigHttpbl{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProxyConfigHttpbl)

	if err != nil {
		return err
	}

	*o = ProxyConfigHttpbl(varProxyConfigHttpbl)

	return err
}

type NullableProxyConfigHttpbl struct {
	value *ProxyConfigHttpbl
	isSet bool
}

func (v NullableProxyConfigHttpbl) Get() *ProxyConfigHttpbl {
	return v.value
}

func (v *NullableProxyConfigHttpbl) Set(val *ProxyConfigHttpbl) {
	v.value = val
	v.isSet = true
}

func (v NullableProxyConfigHttpbl) IsSet() bool {
	return v.isSet
}

func (v *NullableProxyConfigHttpbl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProxyConfigHttpbl(val *ProxyConfigHttpbl) *NullableProxyConfigHttpbl {
	return &NullableProxyConfigHttpbl{value: val, isSet: true}
}

func (v NullableProxyConfigHttpbl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProxyConfigHttpbl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


