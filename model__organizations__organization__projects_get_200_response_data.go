/*
Quant administration API

The Quant administration API provides programmatic access to manage projects within your available organizations. 

API version: 2.0.0
Contact: apiteam@quantcdn.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizationsOrganizationProjectsGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationsOrganizationProjectsGet200ResponseData{}

// OrganizationsOrganizationProjectsGet200ResponseData struct for OrganizationsOrganizationProjectsGet200ResponseData
type OrganizationsOrganizationProjectsGet200ResponseData struct {
	Projects []Project `json:"projects,omitempty"`
}

// NewOrganizationsOrganizationProjectsGet200ResponseData instantiates a new OrganizationsOrganizationProjectsGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationProjectsGet200ResponseData() *OrganizationsOrganizationProjectsGet200ResponseData {
	this := OrganizationsOrganizationProjectsGet200ResponseData{}
	return &this
}

// NewOrganizationsOrganizationProjectsGet200ResponseDataWithDefaults instantiates a new OrganizationsOrganizationProjectsGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationProjectsGet200ResponseDataWithDefaults() *OrganizationsOrganizationProjectsGet200ResponseData {
	this := OrganizationsOrganizationProjectsGet200ResponseData{}
	return &this
}

// GetProjects returns the Projects field value if set, zero value otherwise.
func (o *OrganizationsOrganizationProjectsGet200ResponseData) GetProjects() []Project {
	if o == nil || IsNil(o.Projects) {
		var ret []Project
		return ret
	}
	return o.Projects
}

// GetProjectsOk returns a tuple with the Projects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationProjectsGet200ResponseData) GetProjectsOk() ([]Project, bool) {
	if o == nil || IsNil(o.Projects) {
		return nil, false
	}
	return o.Projects, true
}

// HasProjects returns a boolean if a field has been set.
func (o *OrganizationsOrganizationProjectsGet200ResponseData) HasProjects() bool {
	if o != nil && !IsNil(o.Projects) {
		return true
	}

	return false
}

// SetProjects gets a reference to the given []Project and assigns it to the Projects field.
func (o *OrganizationsOrganizationProjectsGet200ResponseData) SetProjects(v []Project) {
	o.Projects = v
}

func (o OrganizationsOrganizationProjectsGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationsOrganizationProjectsGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Projects) {
		toSerialize["projects"] = o.Projects
	}
	return toSerialize, nil
}

type NullableOrganizationsOrganizationProjectsGet200ResponseData struct {
	value *OrganizationsOrganizationProjectsGet200ResponseData
	isSet bool
}

func (v NullableOrganizationsOrganizationProjectsGet200ResponseData) Get() *OrganizationsOrganizationProjectsGet200ResponseData {
	return v.value
}

func (v *NullableOrganizationsOrganizationProjectsGet200ResponseData) Set(val *OrganizationsOrganizationProjectsGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationProjectsGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationProjectsGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationProjectsGet200ResponseData(val *OrganizationsOrganizationProjectsGet200ResponseData) *NullableOrganizationsOrganizationProjectsGet200ResponseData {
	return &NullableOrganizationsOrganizationProjectsGet200ResponseData{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationProjectsGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationProjectsGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


