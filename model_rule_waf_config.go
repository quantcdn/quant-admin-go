/*
QuantCDN Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RuleWAFConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleWAFConfig{}

// RuleWAFConfig struct for RuleWAFConfig
type RuleWAFConfig struct {
	Mode string `json:"mode"`
	ParanoiaLevel *int32 `json:"paranoia_level,omitempty"`
	AllowRules []string `json:"allow_rules,omitempty"`
	AllowIp []string `json:"allow_ip,omitempty"`
	BlockIp []string `json:"block_ip,omitempty"`
	BlockUa []string `json:"block_ua,omitempty"`
	BlockReferer []string `json:"block_referer,omitempty"`
	NotifySlack *string `json:"notify_slack,omitempty"`
	NotifySlackHistRpm *int32 `json:"notify_slack_hist_rpm,omitempty"`
	NotifyEmail string `json:"notify_email"`
	Httpbl *ProxyConfigHttpbl `json:"httpbl,omitempty"`
	ProxyAlertEnabled *bool `json:"proxy_alert_enabled,omitempty"`
	OriginTimeout int32 `json:"origin_timeout"`
	FailoverMode *bool `json:"failover_mode,omitempty"`
	FailoverOriginTtfb *int32 `json:"failover_origin_ttfb,omitempty"`
	FailoverOriginStatusCode *int32 `json:"failover_origin_status_code,omitempty"`
	FailoverLifetime *int32 `json:"failover_lifetime,omitempty"`
	Notify *string `json:"notify,omitempty"`
	NotifyConfig *ProxyNotifyConfig `json:"notify_config,omitempty"`
	InjectHeaders []string `json:"inject_headers"`
}

type _RuleWAFConfig RuleWAFConfig

// NewRuleWAFConfig instantiates a new RuleWAFConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleWAFConfig(mode string, notifyEmail string, originTimeout int32, injectHeaders []string) *RuleWAFConfig {
	this := RuleWAFConfig{}
	this.Mode = mode
	var paranoiaLevel int32 = 1
	this.ParanoiaLevel = &paranoiaLevel
	this.NotifyEmail = notifyEmail
	this.OriginTimeout = originTimeout
	this.InjectHeaders = injectHeaders
	return &this
}

// NewRuleWAFConfigWithDefaults instantiates a new RuleWAFConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleWAFConfigWithDefaults() *RuleWAFConfig {
	this := RuleWAFConfig{}
	var paranoiaLevel int32 = 1
	this.ParanoiaLevel = &paranoiaLevel
	var originTimeout int32 = 30
	this.OriginTimeout = originTimeout
	return &this
}

// GetMode returns the Mode field value
func (o *RuleWAFConfig) GetMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Mode
}

// GetModeOk returns a tuple with the Mode field value
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mode, true
}

// SetMode sets field value
func (o *RuleWAFConfig) SetMode(v string) {
	o.Mode = v
}

// GetParanoiaLevel returns the ParanoiaLevel field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetParanoiaLevel() int32 {
	if o == nil || IsNil(o.ParanoiaLevel) {
		var ret int32
		return ret
	}
	return *o.ParanoiaLevel
}

// GetParanoiaLevelOk returns a tuple with the ParanoiaLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetParanoiaLevelOk() (*int32, bool) {
	if o == nil || IsNil(o.ParanoiaLevel) {
		return nil, false
	}
	return o.ParanoiaLevel, true
}

// HasParanoiaLevel returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasParanoiaLevel() bool {
	if o != nil && !IsNil(o.ParanoiaLevel) {
		return true
	}

	return false
}

// SetParanoiaLevel gets a reference to the given int32 and assigns it to the ParanoiaLevel field.
func (o *RuleWAFConfig) SetParanoiaLevel(v int32) {
	o.ParanoiaLevel = &v
}

// GetAllowRules returns the AllowRules field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetAllowRules() []string {
	if o == nil || IsNil(o.AllowRules) {
		var ret []string
		return ret
	}
	return o.AllowRules
}

// GetAllowRulesOk returns a tuple with the AllowRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetAllowRulesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowRules) {
		return nil, false
	}
	return o.AllowRules, true
}

// HasAllowRules returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasAllowRules() bool {
	if o != nil && !IsNil(o.AllowRules) {
		return true
	}

	return false
}

// SetAllowRules gets a reference to the given []string and assigns it to the AllowRules field.
func (o *RuleWAFConfig) SetAllowRules(v []string) {
	o.AllowRules = v
}

// GetAllowIp returns the AllowIp field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetAllowIp() []string {
	if o == nil || IsNil(o.AllowIp) {
		var ret []string
		return ret
	}
	return o.AllowIp
}

// GetAllowIpOk returns a tuple with the AllowIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetAllowIpOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowIp) {
		return nil, false
	}
	return o.AllowIp, true
}

// HasAllowIp returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasAllowIp() bool {
	if o != nil && !IsNil(o.AllowIp) {
		return true
	}

	return false
}

// SetAllowIp gets a reference to the given []string and assigns it to the AllowIp field.
func (o *RuleWAFConfig) SetAllowIp(v []string) {
	o.AllowIp = v
}

// GetBlockIp returns the BlockIp field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetBlockIp() []string {
	if o == nil || IsNil(o.BlockIp) {
		var ret []string
		return ret
	}
	return o.BlockIp
}

// GetBlockIpOk returns a tuple with the BlockIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetBlockIpOk() ([]string, bool) {
	if o == nil || IsNil(o.BlockIp) {
		return nil, false
	}
	return o.BlockIp, true
}

// HasBlockIp returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasBlockIp() bool {
	if o != nil && !IsNil(o.BlockIp) {
		return true
	}

	return false
}

// SetBlockIp gets a reference to the given []string and assigns it to the BlockIp field.
func (o *RuleWAFConfig) SetBlockIp(v []string) {
	o.BlockIp = v
}

// GetBlockUa returns the BlockUa field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetBlockUa() []string {
	if o == nil || IsNil(o.BlockUa) {
		var ret []string
		return ret
	}
	return o.BlockUa
}

// GetBlockUaOk returns a tuple with the BlockUa field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetBlockUaOk() ([]string, bool) {
	if o == nil || IsNil(o.BlockUa) {
		return nil, false
	}
	return o.BlockUa, true
}

// HasBlockUa returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasBlockUa() bool {
	if o != nil && !IsNil(o.BlockUa) {
		return true
	}

	return false
}

// SetBlockUa gets a reference to the given []string and assigns it to the BlockUa field.
func (o *RuleWAFConfig) SetBlockUa(v []string) {
	o.BlockUa = v
}

// GetBlockReferer returns the BlockReferer field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetBlockReferer() []string {
	if o == nil || IsNil(o.BlockReferer) {
		var ret []string
		return ret
	}
	return o.BlockReferer
}

// GetBlockRefererOk returns a tuple with the BlockReferer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetBlockRefererOk() ([]string, bool) {
	if o == nil || IsNil(o.BlockReferer) {
		return nil, false
	}
	return o.BlockReferer, true
}

// HasBlockReferer returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasBlockReferer() bool {
	if o != nil && !IsNil(o.BlockReferer) {
		return true
	}

	return false
}

// SetBlockReferer gets a reference to the given []string and assigns it to the BlockReferer field.
func (o *RuleWAFConfig) SetBlockReferer(v []string) {
	o.BlockReferer = v
}

// GetNotifySlack returns the NotifySlack field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetNotifySlack() string {
	if o == nil || IsNil(o.NotifySlack) {
		var ret string
		return ret
	}
	return *o.NotifySlack
}

// GetNotifySlackOk returns a tuple with the NotifySlack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetNotifySlackOk() (*string, bool) {
	if o == nil || IsNil(o.NotifySlack) {
		return nil, false
	}
	return o.NotifySlack, true
}

// HasNotifySlack returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasNotifySlack() bool {
	if o != nil && !IsNil(o.NotifySlack) {
		return true
	}

	return false
}

// SetNotifySlack gets a reference to the given string and assigns it to the NotifySlack field.
func (o *RuleWAFConfig) SetNotifySlack(v string) {
	o.NotifySlack = &v
}

// GetNotifySlackHistRpm returns the NotifySlackHistRpm field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetNotifySlackHistRpm() int32 {
	if o == nil || IsNil(o.NotifySlackHistRpm) {
		var ret int32
		return ret
	}
	return *o.NotifySlackHistRpm
}

// GetNotifySlackHistRpmOk returns a tuple with the NotifySlackHistRpm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetNotifySlackHistRpmOk() (*int32, bool) {
	if o == nil || IsNil(o.NotifySlackHistRpm) {
		return nil, false
	}
	return o.NotifySlackHistRpm, true
}

// HasNotifySlackHistRpm returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasNotifySlackHistRpm() bool {
	if o != nil && !IsNil(o.NotifySlackHistRpm) {
		return true
	}

	return false
}

// SetNotifySlackHistRpm gets a reference to the given int32 and assigns it to the NotifySlackHistRpm field.
func (o *RuleWAFConfig) SetNotifySlackHistRpm(v int32) {
	o.NotifySlackHistRpm = &v
}

// GetNotifyEmail returns the NotifyEmail field value
func (o *RuleWAFConfig) GetNotifyEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotifyEmail
}

// GetNotifyEmailOk returns a tuple with the NotifyEmail field value
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetNotifyEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifyEmail, true
}

// SetNotifyEmail sets field value
func (o *RuleWAFConfig) SetNotifyEmail(v string) {
	o.NotifyEmail = v
}

// GetHttpbl returns the Httpbl field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetHttpbl() ProxyConfigHttpbl {
	if o == nil || IsNil(o.Httpbl) {
		var ret ProxyConfigHttpbl
		return ret
	}
	return *o.Httpbl
}

// GetHttpblOk returns a tuple with the Httpbl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetHttpblOk() (*ProxyConfigHttpbl, bool) {
	if o == nil || IsNil(o.Httpbl) {
		return nil, false
	}
	return o.Httpbl, true
}

// HasHttpbl returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasHttpbl() bool {
	if o != nil && !IsNil(o.Httpbl) {
		return true
	}

	return false
}

// SetHttpbl gets a reference to the given ProxyConfigHttpbl and assigns it to the Httpbl field.
func (o *RuleWAFConfig) SetHttpbl(v ProxyConfigHttpbl) {
	o.Httpbl = &v
}

// GetProxyAlertEnabled returns the ProxyAlertEnabled field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetProxyAlertEnabled() bool {
	if o == nil || IsNil(o.ProxyAlertEnabled) {
		var ret bool
		return ret
	}
	return *o.ProxyAlertEnabled
}

// GetProxyAlertEnabledOk returns a tuple with the ProxyAlertEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetProxyAlertEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ProxyAlertEnabled) {
		return nil, false
	}
	return o.ProxyAlertEnabled, true
}

// HasProxyAlertEnabled returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasProxyAlertEnabled() bool {
	if o != nil && !IsNil(o.ProxyAlertEnabled) {
		return true
	}

	return false
}

// SetProxyAlertEnabled gets a reference to the given bool and assigns it to the ProxyAlertEnabled field.
func (o *RuleWAFConfig) SetProxyAlertEnabled(v bool) {
	o.ProxyAlertEnabled = &v
}

// GetOriginTimeout returns the OriginTimeout field value
func (o *RuleWAFConfig) GetOriginTimeout() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OriginTimeout
}

// GetOriginTimeoutOk returns a tuple with the OriginTimeout field value
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetOriginTimeoutOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginTimeout, true
}

// SetOriginTimeout sets field value
func (o *RuleWAFConfig) SetOriginTimeout(v int32) {
	o.OriginTimeout = v
}

// GetFailoverMode returns the FailoverMode field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetFailoverMode() bool {
	if o == nil || IsNil(o.FailoverMode) {
		var ret bool
		return ret
	}
	return *o.FailoverMode
}

// GetFailoverModeOk returns a tuple with the FailoverMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetFailoverModeOk() (*bool, bool) {
	if o == nil || IsNil(o.FailoverMode) {
		return nil, false
	}
	return o.FailoverMode, true
}

// HasFailoverMode returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasFailoverMode() bool {
	if o != nil && !IsNil(o.FailoverMode) {
		return true
	}

	return false
}

// SetFailoverMode gets a reference to the given bool and assigns it to the FailoverMode field.
func (o *RuleWAFConfig) SetFailoverMode(v bool) {
	o.FailoverMode = &v
}

// GetFailoverOriginTtfb returns the FailoverOriginTtfb field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetFailoverOriginTtfb() int32 {
	if o == nil || IsNil(o.FailoverOriginTtfb) {
		var ret int32
		return ret
	}
	return *o.FailoverOriginTtfb
}

// GetFailoverOriginTtfbOk returns a tuple with the FailoverOriginTtfb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetFailoverOriginTtfbOk() (*int32, bool) {
	if o == nil || IsNil(o.FailoverOriginTtfb) {
		return nil, false
	}
	return o.FailoverOriginTtfb, true
}

// HasFailoverOriginTtfb returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasFailoverOriginTtfb() bool {
	if o != nil && !IsNil(o.FailoverOriginTtfb) {
		return true
	}

	return false
}

// SetFailoverOriginTtfb gets a reference to the given int32 and assigns it to the FailoverOriginTtfb field.
func (o *RuleWAFConfig) SetFailoverOriginTtfb(v int32) {
	o.FailoverOriginTtfb = &v
}

// GetFailoverOriginStatusCode returns the FailoverOriginStatusCode field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetFailoverOriginStatusCode() int32 {
	if o == nil || IsNil(o.FailoverOriginStatusCode) {
		var ret int32
		return ret
	}
	return *o.FailoverOriginStatusCode
}

// GetFailoverOriginStatusCodeOk returns a tuple with the FailoverOriginStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetFailoverOriginStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.FailoverOriginStatusCode) {
		return nil, false
	}
	return o.FailoverOriginStatusCode, true
}

// HasFailoverOriginStatusCode returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasFailoverOriginStatusCode() bool {
	if o != nil && !IsNil(o.FailoverOriginStatusCode) {
		return true
	}

	return false
}

// SetFailoverOriginStatusCode gets a reference to the given int32 and assigns it to the FailoverOriginStatusCode field.
func (o *RuleWAFConfig) SetFailoverOriginStatusCode(v int32) {
	o.FailoverOriginStatusCode = &v
}

// GetFailoverLifetime returns the FailoverLifetime field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetFailoverLifetime() int32 {
	if o == nil || IsNil(o.FailoverLifetime) {
		var ret int32
		return ret
	}
	return *o.FailoverLifetime
}

// GetFailoverLifetimeOk returns a tuple with the FailoverLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetFailoverLifetimeOk() (*int32, bool) {
	if o == nil || IsNil(o.FailoverLifetime) {
		return nil, false
	}
	return o.FailoverLifetime, true
}

// HasFailoverLifetime returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasFailoverLifetime() bool {
	if o != nil && !IsNil(o.FailoverLifetime) {
		return true
	}

	return false
}

// SetFailoverLifetime gets a reference to the given int32 and assigns it to the FailoverLifetime field.
func (o *RuleWAFConfig) SetFailoverLifetime(v int32) {
	o.FailoverLifetime = &v
}

// GetNotify returns the Notify field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetNotify() string {
	if o == nil || IsNil(o.Notify) {
		var ret string
		return ret
	}
	return *o.Notify
}

// GetNotifyOk returns a tuple with the Notify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetNotifyOk() (*string, bool) {
	if o == nil || IsNil(o.Notify) {
		return nil, false
	}
	return o.Notify, true
}

// HasNotify returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasNotify() bool {
	if o != nil && !IsNil(o.Notify) {
		return true
	}

	return false
}

// SetNotify gets a reference to the given string and assigns it to the Notify field.
func (o *RuleWAFConfig) SetNotify(v string) {
	o.Notify = &v
}

// GetNotifyConfig returns the NotifyConfig field value if set, zero value otherwise.
func (o *RuleWAFConfig) GetNotifyConfig() ProxyNotifyConfig {
	if o == nil || IsNil(o.NotifyConfig) {
		var ret ProxyNotifyConfig
		return ret
	}
	return *o.NotifyConfig
}

// GetNotifyConfigOk returns a tuple with the NotifyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetNotifyConfigOk() (*ProxyNotifyConfig, bool) {
	if o == nil || IsNil(o.NotifyConfig) {
		return nil, false
	}
	return o.NotifyConfig, true
}

// HasNotifyConfig returns a boolean if a field has been set.
func (o *RuleWAFConfig) HasNotifyConfig() bool {
	if o != nil && !IsNil(o.NotifyConfig) {
		return true
	}

	return false
}

// SetNotifyConfig gets a reference to the given ProxyNotifyConfig and assigns it to the NotifyConfig field.
func (o *RuleWAFConfig) SetNotifyConfig(v ProxyNotifyConfig) {
	o.NotifyConfig = &v
}

// GetInjectHeaders returns the InjectHeaders field value
func (o *RuleWAFConfig) GetInjectHeaders() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.InjectHeaders
}

// GetInjectHeadersOk returns a tuple with the InjectHeaders field value
// and a boolean to check if the value has been set.
func (o *RuleWAFConfig) GetInjectHeadersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InjectHeaders, true
}

// SetInjectHeaders sets field value
func (o *RuleWAFConfig) SetInjectHeaders(v []string) {
	o.InjectHeaders = v
}

func (o RuleWAFConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleWAFConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mode"] = o.Mode
	if !IsNil(o.ParanoiaLevel) {
		toSerialize["paranoia_level"] = o.ParanoiaLevel
	}
	if !IsNil(o.AllowRules) {
		toSerialize["allow_rules"] = o.AllowRules
	}
	if !IsNil(o.AllowIp) {
		toSerialize["allow_ip"] = o.AllowIp
	}
	if !IsNil(o.BlockIp) {
		toSerialize["block_ip"] = o.BlockIp
	}
	if !IsNil(o.BlockUa) {
		toSerialize["block_ua"] = o.BlockUa
	}
	if !IsNil(o.BlockReferer) {
		toSerialize["block_referer"] = o.BlockReferer
	}
	if !IsNil(o.NotifySlack) {
		toSerialize["notify_slack"] = o.NotifySlack
	}
	if !IsNil(o.NotifySlackHistRpm) {
		toSerialize["notify_slack_hist_rpm"] = o.NotifySlackHistRpm
	}
	toSerialize["notify_email"] = o.NotifyEmail
	if !IsNil(o.Httpbl) {
		toSerialize["httpbl"] = o.Httpbl
	}
	if !IsNil(o.ProxyAlertEnabled) {
		toSerialize["proxy_alert_enabled"] = o.ProxyAlertEnabled
	}
	toSerialize["origin_timeout"] = o.OriginTimeout
	if !IsNil(o.FailoverMode) {
		toSerialize["failover_mode"] = o.FailoverMode
	}
	if !IsNil(o.FailoverOriginTtfb) {
		toSerialize["failover_origin_ttfb"] = o.FailoverOriginTtfb
	}
	if !IsNil(o.FailoverOriginStatusCode) {
		toSerialize["failover_origin_status_code"] = o.FailoverOriginStatusCode
	}
	if !IsNil(o.FailoverLifetime) {
		toSerialize["failover_lifetime"] = o.FailoverLifetime
	}
	if !IsNil(o.Notify) {
		toSerialize["notify"] = o.Notify
	}
	if !IsNil(o.NotifyConfig) {
		toSerialize["notify_config"] = o.NotifyConfig
	}
	toSerialize["inject_headers"] = o.InjectHeaders
	return toSerialize, nil
}

func (o *RuleWAFConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"mode",
		"notify_email",
		"origin_timeout",
		"inject_headers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRuleWAFConfig := _RuleWAFConfig{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRuleWAFConfig)

	if err != nil {
		return err
	}

	*o = RuleWAFConfig(varRuleWAFConfig)

	return err
}

type NullableRuleWAFConfig struct {
	value *RuleWAFConfig
	isSet bool
}

func (v NullableRuleWAFConfig) Get() *RuleWAFConfig {
	return v.value
}

func (v *NullableRuleWAFConfig) Set(val *RuleWAFConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleWAFConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleWAFConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleWAFConfig(val *RuleWAFConfig) *NullableRuleWAFConfig {
	return &NullableRuleWAFConfig{value: val, isSet: true}
}

func (v NullableRuleWAFConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleWAFConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


