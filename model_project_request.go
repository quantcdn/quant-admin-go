/*
Quant administration API

The Quant administration API provides programmatic access to manage projects within your available organizations. 

API version: 2.0.0
Contact: apiteam@quantcdn.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ProjectRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProjectRequest{}

// ProjectRequest struct for ProjectRequest
type ProjectRequest struct {
	Name *string `json:"name,omitempty"`
	Region *string `json:"region,omitempty"`
	AllowQueryParams *bool `json:"allow_query_params,omitempty"`
	BasicAuthUsername *string `json:"basic_auth_username,omitempty"`
	BasicAuthPassword *string `json:"basic_auth_password,omitempty"`
	BasicAuthPreviewOnly *string `json:"basic_auth_preview_only,omitempty"`
	CustomS3SyncBucket *string `json:"custom_s3_sync_bucket,omitempty"`
	CustomS3SyncRegion *string `json:"custom_s3_sync_region,omitempty"`
	CustomS3SyncAccessKey *string `json:"custom_s3_sync_access_key,omitempty"`
	CustomS3SyncSecretKey *string `json:"custom_s3_sync_secret_key,omitempty"`
}

// NewProjectRequest instantiates a new ProjectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectRequest() *ProjectRequest {
	this := ProjectRequest{}
	return &this
}

// NewProjectRequestWithDefaults instantiates a new ProjectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectRequestWithDefaults() *ProjectRequest {
	this := ProjectRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProjectRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProjectRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProjectRequest) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ProjectRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ProjectRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ProjectRequest) SetRegion(v string) {
	o.Region = &v
}

// GetAllowQueryParams returns the AllowQueryParams field value if set, zero value otherwise.
func (o *ProjectRequest) GetAllowQueryParams() bool {
	if o == nil || IsNil(o.AllowQueryParams) {
		var ret bool
		return ret
	}
	return *o.AllowQueryParams
}

// GetAllowQueryParamsOk returns a tuple with the AllowQueryParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRequest) GetAllowQueryParamsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowQueryParams) {
		return nil, false
	}
	return o.AllowQueryParams, true
}

// HasAllowQueryParams returns a boolean if a field has been set.
func (o *ProjectRequest) HasAllowQueryParams() bool {
	if o != nil && !IsNil(o.AllowQueryParams) {
		return true
	}

	return false
}

// SetAllowQueryParams gets a reference to the given bool and assigns it to the AllowQueryParams field.
func (o *ProjectRequest) SetAllowQueryParams(v bool) {
	o.AllowQueryParams = &v
}

// GetBasicAuthUsername returns the BasicAuthUsername field value if set, zero value otherwise.
func (o *ProjectRequest) GetBasicAuthUsername() string {
	if o == nil || IsNil(o.BasicAuthUsername) {
		var ret string
		return ret
	}
	return *o.BasicAuthUsername
}

// GetBasicAuthUsernameOk returns a tuple with the BasicAuthUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRequest) GetBasicAuthUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.BasicAuthUsername) {
		return nil, false
	}
	return o.BasicAuthUsername, true
}

// HasBasicAuthUsername returns a boolean if a field has been set.
func (o *ProjectRequest) HasBasicAuthUsername() bool {
	if o != nil && !IsNil(o.BasicAuthUsername) {
		return true
	}

	return false
}

// SetBasicAuthUsername gets a reference to the given string and assigns it to the BasicAuthUsername field.
func (o *ProjectRequest) SetBasicAuthUsername(v string) {
	o.BasicAuthUsername = &v
}

// GetBasicAuthPassword returns the BasicAuthPassword field value if set, zero value otherwise.
func (o *ProjectRequest) GetBasicAuthPassword() string {
	if o == nil || IsNil(o.BasicAuthPassword) {
		var ret string
		return ret
	}
	return *o.BasicAuthPassword
}

// GetBasicAuthPasswordOk returns a tuple with the BasicAuthPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRequest) GetBasicAuthPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.BasicAuthPassword) {
		return nil, false
	}
	return o.BasicAuthPassword, true
}

// HasBasicAuthPassword returns a boolean if a field has been set.
func (o *ProjectRequest) HasBasicAuthPassword() bool {
	if o != nil && !IsNil(o.BasicAuthPassword) {
		return true
	}

	return false
}

// SetBasicAuthPassword gets a reference to the given string and assigns it to the BasicAuthPassword field.
func (o *ProjectRequest) SetBasicAuthPassword(v string) {
	o.BasicAuthPassword = &v
}

// GetBasicAuthPreviewOnly returns the BasicAuthPreviewOnly field value if set, zero value otherwise.
func (o *ProjectRequest) GetBasicAuthPreviewOnly() string {
	if o == nil || IsNil(o.BasicAuthPreviewOnly) {
		var ret string
		return ret
	}
	return *o.BasicAuthPreviewOnly
}

// GetBasicAuthPreviewOnlyOk returns a tuple with the BasicAuthPreviewOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRequest) GetBasicAuthPreviewOnlyOk() (*string, bool) {
	if o == nil || IsNil(o.BasicAuthPreviewOnly) {
		return nil, false
	}
	return o.BasicAuthPreviewOnly, true
}

// HasBasicAuthPreviewOnly returns a boolean if a field has been set.
func (o *ProjectRequest) HasBasicAuthPreviewOnly() bool {
	if o != nil && !IsNil(o.BasicAuthPreviewOnly) {
		return true
	}

	return false
}

// SetBasicAuthPreviewOnly gets a reference to the given string and assigns it to the BasicAuthPreviewOnly field.
func (o *ProjectRequest) SetBasicAuthPreviewOnly(v string) {
	o.BasicAuthPreviewOnly = &v
}

// GetCustomS3SyncBucket returns the CustomS3SyncBucket field value if set, zero value otherwise.
func (o *ProjectRequest) GetCustomS3SyncBucket() string {
	if o == nil || IsNil(o.CustomS3SyncBucket) {
		var ret string
		return ret
	}
	return *o.CustomS3SyncBucket
}

// GetCustomS3SyncBucketOk returns a tuple with the CustomS3SyncBucket field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRequest) GetCustomS3SyncBucketOk() (*string, bool) {
	if o == nil || IsNil(o.CustomS3SyncBucket) {
		return nil, false
	}
	return o.CustomS3SyncBucket, true
}

// HasCustomS3SyncBucket returns a boolean if a field has been set.
func (o *ProjectRequest) HasCustomS3SyncBucket() bool {
	if o != nil && !IsNil(o.CustomS3SyncBucket) {
		return true
	}

	return false
}

// SetCustomS3SyncBucket gets a reference to the given string and assigns it to the CustomS3SyncBucket field.
func (o *ProjectRequest) SetCustomS3SyncBucket(v string) {
	o.CustomS3SyncBucket = &v
}

// GetCustomS3SyncRegion returns the CustomS3SyncRegion field value if set, zero value otherwise.
func (o *ProjectRequest) GetCustomS3SyncRegion() string {
	if o == nil || IsNil(o.CustomS3SyncRegion) {
		var ret string
		return ret
	}
	return *o.CustomS3SyncRegion
}

// GetCustomS3SyncRegionOk returns a tuple with the CustomS3SyncRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRequest) GetCustomS3SyncRegionOk() (*string, bool) {
	if o == nil || IsNil(o.CustomS3SyncRegion) {
		return nil, false
	}
	return o.CustomS3SyncRegion, true
}

// HasCustomS3SyncRegion returns a boolean if a field has been set.
func (o *ProjectRequest) HasCustomS3SyncRegion() bool {
	if o != nil && !IsNil(o.CustomS3SyncRegion) {
		return true
	}

	return false
}

// SetCustomS3SyncRegion gets a reference to the given string and assigns it to the CustomS3SyncRegion field.
func (o *ProjectRequest) SetCustomS3SyncRegion(v string) {
	o.CustomS3SyncRegion = &v
}

// GetCustomS3SyncAccessKey returns the CustomS3SyncAccessKey field value if set, zero value otherwise.
func (o *ProjectRequest) GetCustomS3SyncAccessKey() string {
	if o == nil || IsNil(o.CustomS3SyncAccessKey) {
		var ret string
		return ret
	}
	return *o.CustomS3SyncAccessKey
}

// GetCustomS3SyncAccessKeyOk returns a tuple with the CustomS3SyncAccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRequest) GetCustomS3SyncAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.CustomS3SyncAccessKey) {
		return nil, false
	}
	return o.CustomS3SyncAccessKey, true
}

// HasCustomS3SyncAccessKey returns a boolean if a field has been set.
func (o *ProjectRequest) HasCustomS3SyncAccessKey() bool {
	if o != nil && !IsNil(o.CustomS3SyncAccessKey) {
		return true
	}

	return false
}

// SetCustomS3SyncAccessKey gets a reference to the given string and assigns it to the CustomS3SyncAccessKey field.
func (o *ProjectRequest) SetCustomS3SyncAccessKey(v string) {
	o.CustomS3SyncAccessKey = &v
}

// GetCustomS3SyncSecretKey returns the CustomS3SyncSecretKey field value if set, zero value otherwise.
func (o *ProjectRequest) GetCustomS3SyncSecretKey() string {
	if o == nil || IsNil(o.CustomS3SyncSecretKey) {
		var ret string
		return ret
	}
	return *o.CustomS3SyncSecretKey
}

// GetCustomS3SyncSecretKeyOk returns a tuple with the CustomS3SyncSecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectRequest) GetCustomS3SyncSecretKeyOk() (*string, bool) {
	if o == nil || IsNil(o.CustomS3SyncSecretKey) {
		return nil, false
	}
	return o.CustomS3SyncSecretKey, true
}

// HasCustomS3SyncSecretKey returns a boolean if a field has been set.
func (o *ProjectRequest) HasCustomS3SyncSecretKey() bool {
	if o != nil && !IsNil(o.CustomS3SyncSecretKey) {
		return true
	}

	return false
}

// SetCustomS3SyncSecretKey gets a reference to the given string and assigns it to the CustomS3SyncSecretKey field.
func (o *ProjectRequest) SetCustomS3SyncSecretKey(v string) {
	o.CustomS3SyncSecretKey = &v
}

func (o ProjectRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProjectRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.AllowQueryParams) {
		toSerialize["allow_query_params"] = o.AllowQueryParams
	}
	if !IsNil(o.BasicAuthUsername) {
		toSerialize["basic_auth_username"] = o.BasicAuthUsername
	}
	if !IsNil(o.BasicAuthPassword) {
		toSerialize["basic_auth_password"] = o.BasicAuthPassword
	}
	if !IsNil(o.BasicAuthPreviewOnly) {
		toSerialize["basic_auth_preview_only"] = o.BasicAuthPreviewOnly
	}
	if !IsNil(o.CustomS3SyncBucket) {
		toSerialize["custom_s3_sync_bucket"] = o.CustomS3SyncBucket
	}
	if !IsNil(o.CustomS3SyncRegion) {
		toSerialize["custom_s3_sync_region"] = o.CustomS3SyncRegion
	}
	if !IsNil(o.CustomS3SyncAccessKey) {
		toSerialize["custom_s3_sync_access_key"] = o.CustomS3SyncAccessKey
	}
	if !IsNil(o.CustomS3SyncSecretKey) {
		toSerialize["custom_s3_sync_secret_key"] = o.CustomS3SyncSecretKey
	}
	return toSerialize, nil
}

type NullableProjectRequest struct {
	value *ProjectRequest
	isSet bool
}

func (v NullableProjectRequest) Get() *ProjectRequest {
	return v.value
}

func (v *NullableProjectRequest) Set(val *ProjectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectRequest(val *ProjectRequest) *NullableProjectRequest {
	return &NullableProjectRequest{value: val, isSet: true}
}

func (v NullableProjectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


