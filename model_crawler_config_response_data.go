/*
QuantCDN Dashboard API

Provides programmatic interface for projects within QuantCDN

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CrawlerConfigResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CrawlerConfigResponseData{}

// CrawlerConfigResponseData struct for CrawlerConfigResponseData
type CrawlerConfigResponseData struct {
	CrawlerConfigs []CrawlerConfig `json:"crawler_configs,omitempty"`
}

// NewCrawlerConfigResponseData instantiates a new CrawlerConfigResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrawlerConfigResponseData() *CrawlerConfigResponseData {
	this := CrawlerConfigResponseData{}
	return &this
}

// NewCrawlerConfigResponseDataWithDefaults instantiates a new CrawlerConfigResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrawlerConfigResponseDataWithDefaults() *CrawlerConfigResponseData {
	this := CrawlerConfigResponseData{}
	return &this
}

// GetCrawlerConfigs returns the CrawlerConfigs field value if set, zero value otherwise.
func (o *CrawlerConfigResponseData) GetCrawlerConfigs() []CrawlerConfig {
	if o == nil || IsNil(o.CrawlerConfigs) {
		var ret []CrawlerConfig
		return ret
	}
	return o.CrawlerConfigs
}

// GetCrawlerConfigsOk returns a tuple with the CrawlerConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrawlerConfigResponseData) GetCrawlerConfigsOk() ([]CrawlerConfig, bool) {
	if o == nil || IsNil(o.CrawlerConfigs) {
		return nil, false
	}
	return o.CrawlerConfigs, true
}

// HasCrawlerConfigs returns a boolean if a field has been set.
func (o *CrawlerConfigResponseData) HasCrawlerConfigs() bool {
	if o != nil && !IsNil(o.CrawlerConfigs) {
		return true
	}

	return false
}

// SetCrawlerConfigs gets a reference to the given []CrawlerConfig and assigns it to the CrawlerConfigs field.
func (o *CrawlerConfigResponseData) SetCrawlerConfigs(v []CrawlerConfig) {
	o.CrawlerConfigs = v
}

func (o CrawlerConfigResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CrawlerConfigResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CrawlerConfigs) {
		toSerialize["crawler_configs"] = o.CrawlerConfigs
	}
	return toSerialize, nil
}

type NullableCrawlerConfigResponseData struct {
	value *CrawlerConfigResponseData
	isSet bool
}

func (v NullableCrawlerConfigResponseData) Get() *CrawlerConfigResponseData {
	return v.value
}

func (v *NullableCrawlerConfigResponseData) Set(val *CrawlerConfigResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableCrawlerConfigResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableCrawlerConfigResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrawlerConfigResponseData(val *CrawlerConfigResponseData) *NullableCrawlerConfigResponseData {
	return &NullableCrawlerConfigResponseData{value: val, isSet: true}
}

func (v NullableCrawlerConfigResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrawlerConfigResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


