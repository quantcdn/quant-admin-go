/*
QuantCDN Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CrawlerScheduleRequestUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CrawlerScheduleRequestUpdate{}

// CrawlerScheduleRequestUpdate struct for CrawlerScheduleRequestUpdate
type CrawlerScheduleRequestUpdate struct {
	ScheduleCronString *string `json:"schedule_cron_string,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CrawlerScheduleRequestUpdate CrawlerScheduleRequestUpdate

// NewCrawlerScheduleRequestUpdate instantiates a new CrawlerScheduleRequestUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCrawlerScheduleRequestUpdate() *CrawlerScheduleRequestUpdate {
	this := CrawlerScheduleRequestUpdate{}
	return &this
}

// NewCrawlerScheduleRequestUpdateWithDefaults instantiates a new CrawlerScheduleRequestUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCrawlerScheduleRequestUpdateWithDefaults() *CrawlerScheduleRequestUpdate {
	this := CrawlerScheduleRequestUpdate{}
	return &this
}

// GetScheduleCronString returns the ScheduleCronString field value if set, zero value otherwise.
func (o *CrawlerScheduleRequestUpdate) GetScheduleCronString() string {
	if o == nil || IsNil(o.ScheduleCronString) {
		var ret string
		return ret
	}
	return *o.ScheduleCronString
}

// GetScheduleCronStringOk returns a tuple with the ScheduleCronString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CrawlerScheduleRequestUpdate) GetScheduleCronStringOk() (*string, bool) {
	if o == nil || IsNil(o.ScheduleCronString) {
		return nil, false
	}
	return o.ScheduleCronString, true
}

// HasScheduleCronString returns a boolean if a field has been set.
func (o *CrawlerScheduleRequestUpdate) HasScheduleCronString() bool {
	if o != nil && !IsNil(o.ScheduleCronString) {
		return true
	}

	return false
}

// SetScheduleCronString gets a reference to the given string and assigns it to the ScheduleCronString field.
func (o *CrawlerScheduleRequestUpdate) SetScheduleCronString(v string) {
	o.ScheduleCronString = &v
}

func (o CrawlerScheduleRequestUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CrawlerScheduleRequestUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScheduleCronString) {
		toSerialize["schedule_cron_string"] = o.ScheduleCronString
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CrawlerScheduleRequestUpdate) UnmarshalJSON(data []byte) (err error) {
	varCrawlerScheduleRequestUpdate := _CrawlerScheduleRequestUpdate{}

	err = json.Unmarshal(data, &varCrawlerScheduleRequestUpdate)

	if err != nil {
		return err
	}

	*o = CrawlerScheduleRequestUpdate(varCrawlerScheduleRequestUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "schedule_cron_string")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCrawlerScheduleRequestUpdate struct {
	value *CrawlerScheduleRequestUpdate
	isSet bool
}

func (v NullableCrawlerScheduleRequestUpdate) Get() *CrawlerScheduleRequestUpdate {
	return v.value
}

func (v *NullableCrawlerScheduleRequestUpdate) Set(val *CrawlerScheduleRequestUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableCrawlerScheduleRequestUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableCrawlerScheduleRequestUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCrawlerScheduleRequestUpdate(val *CrawlerScheduleRequestUpdate) *NullableCrawlerScheduleRequestUpdate {
	return &NullableCrawlerScheduleRequestUpdate{value: val, isSet: true}
}

func (v NullableCrawlerScheduleRequestUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCrawlerScheduleRequestUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


