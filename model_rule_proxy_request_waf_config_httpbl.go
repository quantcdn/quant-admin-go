/*
Quant administration API

The Quant administration API provides programmatic access to manage projects within your available organizations. 

API version: 2.0.0
Contact: apiteam@quantcdn.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the RuleProxyRequestWafConfigHttpbl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleProxyRequestWafConfigHttpbl{}

// RuleProxyRequestWafConfigHttpbl struct for RuleProxyRequestWafConfigHttpbl
type RuleProxyRequestWafConfigHttpbl struct {
	HttpblEnabled *bool `json:"httpbl_enabled,omitempty"`
	BlockSuspicious *bool `json:"block_suspicious,omitempty"`
	BlockHarvester *bool `json:"block_harvester,omitempty"`
	BlockSpam *bool `json:"block_spam,omitempty"`
	BlockSearchEngine *bool `json:"block_search_engine,omitempty"`
}

// NewRuleProxyRequestWafConfigHttpbl instantiates a new RuleProxyRequestWafConfigHttpbl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleProxyRequestWafConfigHttpbl() *RuleProxyRequestWafConfigHttpbl {
	this := RuleProxyRequestWafConfigHttpbl{}
	return &this
}

// NewRuleProxyRequestWafConfigHttpblWithDefaults instantiates a new RuleProxyRequestWafConfigHttpbl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleProxyRequestWafConfigHttpblWithDefaults() *RuleProxyRequestWafConfigHttpbl {
	this := RuleProxyRequestWafConfigHttpbl{}
	return &this
}

// GetHttpblEnabled returns the HttpblEnabled field value if set, zero value otherwise.
func (o *RuleProxyRequestWafConfigHttpbl) GetHttpblEnabled() bool {
	if o == nil || IsNil(o.HttpblEnabled) {
		var ret bool
		return ret
	}
	return *o.HttpblEnabled
}

// GetHttpblEnabledOk returns a tuple with the HttpblEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyRequestWafConfigHttpbl) GetHttpblEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.HttpblEnabled) {
		return nil, false
	}
	return o.HttpblEnabled, true
}

// HasHttpblEnabled returns a boolean if a field has been set.
func (o *RuleProxyRequestWafConfigHttpbl) HasHttpblEnabled() bool {
	if o != nil && !IsNil(o.HttpblEnabled) {
		return true
	}

	return false
}

// SetHttpblEnabled gets a reference to the given bool and assigns it to the HttpblEnabled field.
func (o *RuleProxyRequestWafConfigHttpbl) SetHttpblEnabled(v bool) {
	o.HttpblEnabled = &v
}

// GetBlockSuspicious returns the BlockSuspicious field value if set, zero value otherwise.
func (o *RuleProxyRequestWafConfigHttpbl) GetBlockSuspicious() bool {
	if o == nil || IsNil(o.BlockSuspicious) {
		var ret bool
		return ret
	}
	return *o.BlockSuspicious
}

// GetBlockSuspiciousOk returns a tuple with the BlockSuspicious field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyRequestWafConfigHttpbl) GetBlockSuspiciousOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockSuspicious) {
		return nil, false
	}
	return o.BlockSuspicious, true
}

// HasBlockSuspicious returns a boolean if a field has been set.
func (o *RuleProxyRequestWafConfigHttpbl) HasBlockSuspicious() bool {
	if o != nil && !IsNil(o.BlockSuspicious) {
		return true
	}

	return false
}

// SetBlockSuspicious gets a reference to the given bool and assigns it to the BlockSuspicious field.
func (o *RuleProxyRequestWafConfigHttpbl) SetBlockSuspicious(v bool) {
	o.BlockSuspicious = &v
}

// GetBlockHarvester returns the BlockHarvester field value if set, zero value otherwise.
func (o *RuleProxyRequestWafConfigHttpbl) GetBlockHarvester() bool {
	if o == nil || IsNil(o.BlockHarvester) {
		var ret bool
		return ret
	}
	return *o.BlockHarvester
}

// GetBlockHarvesterOk returns a tuple with the BlockHarvester field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyRequestWafConfigHttpbl) GetBlockHarvesterOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockHarvester) {
		return nil, false
	}
	return o.BlockHarvester, true
}

// HasBlockHarvester returns a boolean if a field has been set.
func (o *RuleProxyRequestWafConfigHttpbl) HasBlockHarvester() bool {
	if o != nil && !IsNil(o.BlockHarvester) {
		return true
	}

	return false
}

// SetBlockHarvester gets a reference to the given bool and assigns it to the BlockHarvester field.
func (o *RuleProxyRequestWafConfigHttpbl) SetBlockHarvester(v bool) {
	o.BlockHarvester = &v
}

// GetBlockSpam returns the BlockSpam field value if set, zero value otherwise.
func (o *RuleProxyRequestWafConfigHttpbl) GetBlockSpam() bool {
	if o == nil || IsNil(o.BlockSpam) {
		var ret bool
		return ret
	}
	return *o.BlockSpam
}

// GetBlockSpamOk returns a tuple with the BlockSpam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyRequestWafConfigHttpbl) GetBlockSpamOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockSpam) {
		return nil, false
	}
	return o.BlockSpam, true
}

// HasBlockSpam returns a boolean if a field has been set.
func (o *RuleProxyRequestWafConfigHttpbl) HasBlockSpam() bool {
	if o != nil && !IsNil(o.BlockSpam) {
		return true
	}

	return false
}

// SetBlockSpam gets a reference to the given bool and assigns it to the BlockSpam field.
func (o *RuleProxyRequestWafConfigHttpbl) SetBlockSpam(v bool) {
	o.BlockSpam = &v
}

// GetBlockSearchEngine returns the BlockSearchEngine field value if set, zero value otherwise.
func (o *RuleProxyRequestWafConfigHttpbl) GetBlockSearchEngine() bool {
	if o == nil || IsNil(o.BlockSearchEngine) {
		var ret bool
		return ret
	}
	return *o.BlockSearchEngine
}

// GetBlockSearchEngineOk returns a tuple with the BlockSearchEngine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyRequestWafConfigHttpbl) GetBlockSearchEngineOk() (*bool, bool) {
	if o == nil || IsNil(o.BlockSearchEngine) {
		return nil, false
	}
	return o.BlockSearchEngine, true
}

// HasBlockSearchEngine returns a boolean if a field has been set.
func (o *RuleProxyRequestWafConfigHttpbl) HasBlockSearchEngine() bool {
	if o != nil && !IsNil(o.BlockSearchEngine) {
		return true
	}

	return false
}

// SetBlockSearchEngine gets a reference to the given bool and assigns it to the BlockSearchEngine field.
func (o *RuleProxyRequestWafConfigHttpbl) SetBlockSearchEngine(v bool) {
	o.BlockSearchEngine = &v
}

func (o RuleProxyRequestWafConfigHttpbl) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleProxyRequestWafConfigHttpbl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HttpblEnabled) {
		toSerialize["httpbl_enabled"] = o.HttpblEnabled
	}
	if !IsNil(o.BlockSuspicious) {
		toSerialize["block_suspicious"] = o.BlockSuspicious
	}
	if !IsNil(o.BlockHarvester) {
		toSerialize["block_harvester"] = o.BlockHarvester
	}
	if !IsNil(o.BlockSpam) {
		toSerialize["block_spam"] = o.BlockSpam
	}
	if !IsNil(o.BlockSearchEngine) {
		toSerialize["block_search_engine"] = o.BlockSearchEngine
	}
	return toSerialize, nil
}

type NullableRuleProxyRequestWafConfigHttpbl struct {
	value *RuleProxyRequestWafConfigHttpbl
	isSet bool
}

func (v NullableRuleProxyRequestWafConfigHttpbl) Get() *RuleProxyRequestWafConfigHttpbl {
	return v.value
}

func (v *NullableRuleProxyRequestWafConfigHttpbl) Set(val *RuleProxyRequestWafConfigHttpbl) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleProxyRequestWafConfigHttpbl) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleProxyRequestWafConfigHttpbl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleProxyRequestWafConfigHttpbl(val *RuleProxyRequestWafConfigHttpbl) *NullableRuleProxyRequestWafConfigHttpbl {
	return &NullableRuleProxyRequestWafConfigHttpbl{value: val, isSet: true}
}

func (v NullableRuleProxyRequestWafConfigHttpbl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleProxyRequestWafConfigHttpbl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


