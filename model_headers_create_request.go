/*
QuantCDN Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package quantadmingo

import (
	"encoding/json"
	"fmt"
)

// checks if the HeadersCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HeadersCreateRequest{}

// HeadersCreateRequest struct for HeadersCreateRequest
type HeadersCreateRequest struct {
	Headers map[string]string `json:"headers"`
	AdditionalProperties map[string]interface{}
}

type _HeadersCreateRequest HeadersCreateRequest

// NewHeadersCreateRequest instantiates a new HeadersCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHeadersCreateRequest(headers map[string]string) *HeadersCreateRequest {
	this := HeadersCreateRequest{}
	this.Headers = headers
	return &this
}

// NewHeadersCreateRequestWithDefaults instantiates a new HeadersCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHeadersCreateRequestWithDefaults() *HeadersCreateRequest {
	this := HeadersCreateRequest{}
	return &this
}

// GetHeaders returns the Headers field value
func (o *HeadersCreateRequest) GetHeaders() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value
// and a boolean to check if the value has been set.
func (o *HeadersCreateRequest) GetHeadersOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Headers, true
}

// SetHeaders sets field value
func (o *HeadersCreateRequest) SetHeaders(v map[string]string) {
	o.Headers = v
}

func (o HeadersCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HeadersCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["headers"] = o.Headers

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *HeadersCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"headers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHeadersCreateRequest := _HeadersCreateRequest{}

	err = json.Unmarshal(data, &varHeadersCreateRequest)

	if err != nil {
		return err
	}

	*o = HeadersCreateRequest(varHeadersCreateRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "headers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableHeadersCreateRequest struct {
	value *HeadersCreateRequest
	isSet bool
}

func (v NullableHeadersCreateRequest) Get() *HeadersCreateRequest {
	return v.value
}

func (v *NullableHeadersCreateRequest) Set(val *HeadersCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHeadersCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHeadersCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHeadersCreateRequest(val *HeadersCreateRequest) *NullableHeadersCreateRequest {
	return &NullableHeadersCreateRequest{value: val, isSet: true}
}

func (v NullableHeadersCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHeadersCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


