openapi: 3.0.0
info:
  title: QuantCDN Admin API
  version: 0.0.0
servers:
- description: Staging Dashboard
  url: https://portal.stage.quantcdn.io/api/v2
security:
- BearerAuth: []
tags:
- name: Organizations
- name: Projects
- name: Crawlers
- name: Domains
- name: Rules
- name: Rules__Redirect
- name: Rules__Proxy
- name: Rules__Auth
- name: Rules__Headers
- name: Rules__CustomResponse
paths:
  /organizations:
    get:
      operationId: Organizations_list
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organization'
                type: array
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Organizations
  /organizations/{organization}:
    get:
      operationId: Organizations_read
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Organizations
  /organizations/{organization}/projects:
    get:
      operationId: Projects_list
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Project'
                type: array
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Projects
    post:
      operationId: Projects_create
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Projects
  /organizations/{organization}/projects/{project}:
    delete:
      operationId: Projects_delete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Projects
    get:
      operationId: Projects_read
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Projects
    put:
      operationId: Projects_update
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Projects
  /organizations/{organization}/projects/{project}/crawlers:
    get:
      operationId: Crawlers_list
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Crawler'
                type: array
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Crawlers
    post:
      operationId: Crawlers_create
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrawlerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crawler'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Crawlers
  /organizations/{organization}/projects/{project}/crawlers/{crawler}:
    delete:
      operationId: Crawlers_delete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: crawler
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crawler'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Crawlers
    get:
      operationId: Crawlers_read
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: crawler
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crawler'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Crawlers
    put:
      operationId: Crawlers_update
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: crawler
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrawlerRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Crawler'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Crawlers
  /organizations/{organization}/projects/{project}/domains:
    get:
      operationId: Domains_list
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Domain'
                type: array
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Domains
    post:
      operationId: Domains_create
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Domains
  /organizations/{organization}/projects/{project}/domains/{domain}:
    delete:
      operationId: Domains_delete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Domains
    get:
      operationId: Domains_read
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Domains
    put:
      operationId: Domains_update
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: domain
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Domains
  /organizations/{organization}/projects/{project}/rules:
    get:
      operationId: Rules_list
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule'
                type: array
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules
  /organizations/{organization}/projects/{project}/rules/auth:
    get:
      operationId: RulesAuth_list
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule'
                type: array
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Auth
    post:
      operationId: RulesAuth_create
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Auth
  /organizations/{organization}/projects/{project}/rules/auth/{rule}:
    delete:
      operationId: RulesAuth_delete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Auth
    get:
      operationId: RulesAuth_read
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Auth
    put:
      operationId: RulesAuth_update
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleAuthRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Auth
  /organizations/{organization}/projects/{project}/rules/custom-response:
    get:
      operationId: RulesCustomResponse_list
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule'
                type: array
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__CustomResponse
    post:
      operationId: RulesCustomResponse_create
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleCustomResponseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__CustomResponse
  /organizations/{organization}/projects/{project}/rules/custom-response/{rule}:
    delete:
      operationId: RulesCustomResponse_delete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__CustomResponse
    get:
      operationId: RulesCustomResponse_read
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__CustomResponse
    put:
      operationId: RulesCustomResponse_update
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleCustomResponseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__CustomResponse
  /organizations/{organization}/projects/{project}/rules/headers:
    get:
      operationId: RulesHeaders_list
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule'
                type: array
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Headers
    post:
      operationId: RulesHeaders_create
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleHeaderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Headers
  /organizations/{organization}/projects/{project}/rules/headers/{rule}:
    delete:
      operationId: RulesHeaders_delete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Headers
    get:
      operationId: RulesHeaders_read
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Headers
    put:
      operationId: RulesHeaders_update
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleHeaderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Headers
  /organizations/{organization}/projects/{project}/rules/proxy:
    get:
      operationId: RulesProxy_list
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule'
                type: array
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Proxy
    post:
      operationId: RulesProxy_create
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleProxyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Proxy
  /organizations/{organization}/projects/{project}/rules/proxy/{rule}:
    delete:
      operationId: RulesProxy_delete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Proxy
    get:
      operationId: RulesProxy_read
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Proxy
    put:
      operationId: RulesProxy_update
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleProxyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Proxy
  /organizations/{organization}/projects/{project}/rules/redirect:
    get:
      operationId: RulesRedirect_list
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Rule'
                type: array
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Redirect
    post:
      operationId: RulesRedirect_create
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleRedirectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Redirect
  /organizations/{organization}/projects/{project}/rules/redirect/{rule}:
    delete:
      operationId: RulesRedirect_delete
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Redirect
    get:
      operationId: RulesRedirect_read
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Redirect
    put:
      operationId: RulesRedirect_update
      parameters:
      - explode: false
        in: path
        name: organization
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: rule
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleRedirectRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rule'
          description: The request has succeeded.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: The server could not understand the request due to invalid
            syntax.
      tags:
      - Rules__Redirect
components:
  parameters:
    ResourceURLParameters.organization:
      explode: false
      in: path
      name: organization
      required: true
      schema:
        type: string
      style: simple
    ResourceURLParameters.project:
      explode: false
      in: path
      name: project
      required: true
      schema:
        type: string
      style: simple
  schemas:
    Crawler:
      example:
        updated_at: updated_at
        project_id: 6
        domain: domain
        domain_verified: 1
        created_at: created_at
        id: 0
        uuid: uuid
        config: config
        deleted_at: deleted_at
      properties:
        id:
          format: int32
          type: integer
        project_id:
          format: int32
          type: integer
        uuid:
          type: string
        config:
          type: string
        domain:
          type: string
        domain_verified:
          format: int32
          type: integer
        created_at:
          type: string
        updated_at:
          type: string
        deleted_at:
          type: string
      required:
      - config
      - domain
      - domain_verified
      - id
      - project_id
      - uuid
      type: object
    CrawlerRequest:
      example:
        headers:
          key: headers
        url_list:
        - url_list
        - url_list
        domain: domain
        name: name
        browser_mode: true
      properties:
        name:
          type: string
        domain:
          type: string
        browser_mode:
          type: boolean
        url_list:
          items:
            type: string
          type: array
        headers:
          additionalProperties:
            type: string
          type: object
      required:
      - domain
      - headers
      - url_list
      type: object
    Domain:
      example:
        updated_at: updated_at
        project_id: 6
        domain: domain
        dns_engaged: 5
        created_at: created_at
        id: 0
        in_section: 1
        deleted_at: deleted_at
        section_message: section_message
      properties:
        id:
          format: int32
          type: integer
        domain:
          type: string
        project_id:
          format: int32
          type: integer
        in_section:
          format: int32
          type: integer
        dns_engaged:
          format: int32
          type: integer
        section_message:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        deleted_at:
          type: string
      required:
      - dns_engaged
      - domain
      - id
      - in_section
      - project_id
      type: object
    DomainRequest:
      example:
        domain: domain
        name: name
      properties:
        name:
          type: string
        domain:
          type: string
      required:
      - domain
      - name
      type: object
    Error:
      example:
        data:
          key: ""
        message: message
        error: true
      properties:
        message:
          type: string
        error:
          type: boolean
        data:
          additionalProperties: {}
          type: object
      required:
      - error
      - message
      type: object
    Organization:
      example:
        updated_at: updated_at
        name: name
        organizations: organizations
        created_at: created_at
        subscription: subscription
        region: au
        type: type
      properties:
        name:
          readOnly: true
          type: string
        organizations:
          type: string
        region:
          default: au
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        subscription:
          type: string
        type:
          type: string
      required:
      - name
      - organizations
      - region
      type: object
    Project:
      example:
        project_type: normal
        fastly_migrated: 5
        created_at: created_at
        machine_name: machine_name
        uuid: uuid
        deleted_at: deleted_at
        allow_query_params: true
        updated_at: updated_at
        organization_id: 6
        name: name
        security_score: security_score
        id: 0
        git_url: git_url
        parent_project_id: 1
        region: region
      properties:
        id:
          format: int32
          type: integer
        machine_name:
          type: string
        name:
          type: string
        organization_id:
          format: int32
          type: integer
        uuid:
          type: string
        project_type:
          default: normal
          enum:
          - normal
          - opensource
          - quant
          type: string
        git_url:
          type: string
        security_score:
          type: string
        parent_project_id:
          format: int32
          type: integer
        region:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        deleted_at:
          type: string
        fastly_migrated:
          default: 1
          format: int32
          type: integer
        allow_query_params:
          type: boolean
      required:
      - machine_name
      - name
      type: object
    ProjectRequest:
      example:
        basic_auth_preview_only: basic_auth_preview_only
        allow_query_params: true
        basic_auth_password: basic_auth_password
        custom_s3_sync_region: custom_s3_sync_region
        custom_s3_sync_access_key: custom_s3_sync_access_key
        name: name
        basic_auth_username: basic_auth_username
        region: au
        custom_s3_sync_secret_key: custom_s3_sync_secret_key
        custom_s3_sync_bucket: custom_s3_sync_bucket
      properties:
        name:
          type: string
        region:
          default: au
          type: string
        allow_query_params:
          type: boolean
        basic_auth_username:
          type: string
        basic_auth_password:
          type: string
        basic_auth_preview_only:
          type: string
        custom_s3_sync_bucket:
          type: string
        custom_s3_sync_region:
          type: string
        custom_s3_sync_access_key:
          type: string
        custom_s3_sync_secret_key:
          type: string
      required:
      - name
      - region
      type: object
    ProxyConfigHttpbl:
      example:
        block_harvester: false
        httpbl_enabled: false
        block_spam: false
        block_search_enginer: false
        block_suspicious: false
      properties:
        httpbl_enabled:
          default: false
          type: boolean
        block_suspicious:
          default: false
          type: boolean
        block_harvester:
          default: false
          type: boolean
        block_spam:
          default: false
          type: boolean
        block_search_enginer:
          default: false
          type: boolean
      required:
      - block_harvester
      - block_search_enginer
      - block_spam
      - block_suspicious
      - httpbl_enabled
      type: object
    ProxyNotifyConfig:
      example:
        period: 3
        slack_webhook: slack_webhook
        origin_status_code:
        - 9
        - 9
      properties:
        origin_status_code:
          items:
            format: int32
            type: integer
          type: array
        period:
          format: int32
          type: integer
        slack_webhook:
          type: string
      required:
      - origin_status_code
      - period
      - slack_webhook
      type: object
    Rule:
      example:
        urls:
        - urls
        - urls
        uuid: uuid
        config: config
      properties:
        uuid:
          type: string
        config:
          type: string
        urls:
          items:
            type: string
          type: array
      required:
      - config
      - uuid
      type: object
    RuleAuthRequest:
      example:
        country: country_is
        method: method_is
        ip_is_not:
        - ip_is_not
        - ip_is_not
        method_is:
        - method_is
        - method_is
        ip: ip_is
        country_is:
        - country_is
        - country_is
        method_is_not:
        - method_is_not
        - method_is_not
        country_is_not:
        - country_is_not
        - country_is_not
        urls:
        - urls
        - urls
        auth_user: auth_user
        domain: any
        name: name
        ip_is:
        - ip_is
        - ip_is
        auth_pass: auth_pass
        disabled: false
      properties:
        domain:
          default: any
          type: string
        name:
          type: string
        disabled:
          default: false
          type: boolean
        urls:
          items:
            type: string
          type: array
        country:
          enum:
          - country_is
          - country_is_not
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          enum:
          - method_is
          - method_is_not
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          enum:
          - ip_is
          - ip_is_not
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
        auth_user:
          type: string
        auth_pass:
          type: string
      required:
      - auth_pass
      - auth_user
      - disabled
      - domain
      type: object
    RuleCustomResponseRequest:
      example:
        country: country_is
        method: method_is
        ip_is_not:
        - ip_is_not
        - ip_is_not
        custom_response_status_code: 0
        method_is:
        - method_is
        - method_is
        ip: ip_is
        country_is:
        - country_is
        - country_is
        method_is_not:
        - method_is_not
        - method_is_not
        custom_response_body: custom_response_body
        country_is_not:
        - country_is_not
        - country_is_not
        urls:
        - urls
        - urls
        domain: any
        name: name
        ip_is:
        - ip_is
        - ip_is
        disabled: false
      properties:
        domain:
          default: any
          type: string
        name:
          type: string
        disabled:
          default: false
          type: boolean
        urls:
          items:
            type: string
          type: array
        country:
          enum:
          - country_is
          - country_is_not
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          enum:
          - method_is
          - method_is_not
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          enum:
          - ip_is
          - ip_is_not
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
        custom_response_status_code:
          default: 200
          format: int32
          type: integer
        custom_response_body:
          type: string
      required:
      - custom_response_body
      - custom_response_status_code
      - disabled
      - domain
      type: object
    RuleHeaderRequest:
      example:
        country: country_is
        headers:
          key: headers
        method: method_is
        ip_is_not:
        - ip_is_not
        - ip_is_not
        method_is:
        - method_is
        - method_is
        ip: ip_is
        country_is:
        - country_is
        - country_is
        method_is_not:
        - method_is_not
        - method_is_not
        country_is_not:
        - country_is_not
        - country_is_not
        urls:
        - urls
        - urls
        domain: any
        name: name
        ip_is:
        - ip_is
        - ip_is
        disabled: false
      properties:
        domain:
          default: any
          type: string
        name:
          type: string
        disabled:
          default: false
          type: boolean
        urls:
          items:
            type: string
          type: array
        country:
          enum:
          - country_is
          - country_is_not
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          enum:
          - method_is
          - method_is_not
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          enum:
          - ip_is
          - ip_is_not
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
        headers:
          additionalProperties:
            type: string
          type: object
      required:
      - disabled
      - domain
      - headers
      type: object
    RuleProxyRequest:
      example:
        country: country_is
        cache_lifetime: 0
        method: method_is
        ip_is_not:
        - ip_is_not
        - ip_is_not
        strip_headers:
        - strip_headers
        - strip_headers
        method_is:
        - method_is
        - method_is
        ip: ip_is
        country_is:
        - country_is
        - country_is
        method_is_not:
        - method_is_not
        - method_is_not
        country_is_not:
        - country_is_not
        - country_is_not
        urls:
        - urls
        - urls
        only_proxy_404: true
        auth_user: auth_user
        domain: any
        name: name
        host: host
        waf_enabled: true
        ip_is:
        - ip_is
        - ip_is
        auth_pass: auth_pass
        disabled: false
        to: to
        disable_ssl_verify: true
        waf_config:
          allow_rules:
          - allow_rules
          - allow_rules
          origin_timeout: 5
          httpbl:
            block_harvester: false
            httpbl_enabled: false
            block_spam: false
            block_search_enginer: false
            block_suspicious: false
          notify_slack_hist_rpm: 1
          failover_origin_ttfb: 5
          notify_config:
            period: 3
            slack_webhook: slack_webhook
            origin_status_code:
            - 9
            - 9
          notify: notify
          allow_ip:
          - allow_ip
          - allow_ip
          mode: block
          inject_headers:
          - inject_headers
          - inject_headers
          notify_email: notify_email
          block_ip:
          - block_ip
          - block_ip
          block_referer:
          - block_referer
          - block_referer
          failover_lifetime: 7
          block_ua:
          - block_ua
          - block_ua
          failover_origin_status_code: 2
          notify_slack: notify_slack
          proxy_alert_enabled: true
          paranoia_level: 6
          failover_mode: true
      properties:
        domain:
          default: any
          type: string
        name:
          type: string
        disabled:
          default: false
          type: boolean
        urls:
          items:
            type: string
          type: array
        country:
          enum:
          - country_is
          - country_is_not
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          enum:
          - method_is
          - method_is_not
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          enum:
          - ip_is
          - ip_is_not
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
        to:
          type: string
        host:
          type: string
        auth_user:
          type: string
        auth_pass:
          type: string
        disable_ssl_verify:
          type: boolean
        cache_lifetime:
          format: int32
          type: integer
        only_proxy_404:
          type: boolean
        strip_headers:
          items:
            type: string
          type: array
        waf_enabled:
          type: boolean
        waf_config:
          $ref: '#/components/schemas/RuleWAFConfig'
      required:
      - disabled
      - domain
      - to
      type: object
    RuleRedirectRequest:
      allOf:
      - $ref: '#/components/schemas/RuleRequest'
      example:
        country: country_is
        method: method_is
        ip_is_not:
        - ip_is_not
        - ip_is_not
        method_is:
        - method_is
        - method_is
        ip: ip_is
        redirect_code: 0
        country_is:
        - country_is
        - country_is
        method_is_not:
        - method_is_not
        - method_is_not
        redirect_to: redirect_to
        country_is_not:
        - country_is_not
        - country_is_not
        urls:
        - urls
        - urls
        domain: any
        name: name
        ip_is:
        - ip_is
        - ip_is
        disabled: false
      properties:
        domain:
          default: any
          type: string
        name:
          type: string
        disabled:
          default: false
          type: boolean
        urls:
          items:
            type: string
          type: array
        country:
          enum:
          - country_is
          - country_is_not
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          enum:
          - method_is
          - method_is_not
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          enum:
          - ip_is
          - ip_is_not
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
        redirect_to:
          type: string
        redirect_code:
          default: 301
          type: integer
      required:
      - disabled
      - domain
      - redirect_code
      - redirect_to
      type: object
    RuleRequest:
      properties:
        domain:
          default: any
          type: string
        name:
          type: string
        disabled:
          default: false
          type: boolean
        urls:
          items:
            type: string
          type: array
        country:
          enum:
          - country_is
          - country_is_not
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          enum:
          - method_is
          - method_is_not
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          enum:
          - ip_is
          - ip_is_not
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
      required:
      - disabled
      - domain
      type: object
    RuleWAFConfig:
      example:
        allow_rules:
        - allow_rules
        - allow_rules
        origin_timeout: 5
        httpbl:
          block_harvester: false
          httpbl_enabled: false
          block_spam: false
          block_search_enginer: false
          block_suspicious: false
        notify_slack_hist_rpm: 1
        failover_origin_ttfb: 5
        notify_config:
          period: 3
          slack_webhook: slack_webhook
          origin_status_code:
          - 9
          - 9
        notify: notify
        allow_ip:
        - allow_ip
        - allow_ip
        mode: block
        inject_headers:
        - inject_headers
        - inject_headers
        notify_email: notify_email
        block_ip:
        - block_ip
        - block_ip
        block_referer:
        - block_referer
        - block_referer
        failover_lifetime: 7
        block_ua:
        - block_ua
        - block_ua
        failover_origin_status_code: 2
        notify_slack: notify_slack
        proxy_alert_enabled: true
        paranoia_level: 6
        failover_mode: true
      properties:
        mode:
          enum:
          - block
          - report
          type: string
        paranoia_level:
          default: 1
          type: integer
        allow_rules:
          items:
            type: string
          type: array
        allow_ip:
          items:
            type: string
          type: array
        block_ip:
          items:
            type: string
          type: array
        block_ua:
          items:
            type: string
          type: array
        block_referer:
          items:
            type: string
          type: array
        notify_slack:
          type: string
        notify_slack_hist_rpm:
          format: int32
          type: integer
        notify_email:
          type: string
        httpbl:
          $ref: '#/components/schemas/ProxyConfigHttpbl'
        proxy_alert_enabled:
          type: boolean
        origin_timeout:
          default: 30
          format: int32
          type: integer
        failover_mode:
          type: boolean
        failover_origin_ttfb:
          format: int32
          type: integer
        failover_origin_status_code:
          format: int32
          type: integer
        failover_lifetime:
          format: int32
          type: integer
        notify:
          type: string
        notify_config:
          $ref: '#/components/schemas/ProxyNotifyConfig'
        inject_headers:
          items:
            type: string
          type: array
      required:
      - inject_headers
      - mode
      - notify_email
      - origin_timeout
      type: object
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
