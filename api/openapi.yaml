openapi: 3.1.0
info:
  contact:
    email: apiteam@quantcdn.io
  description: |
    The Quant administration API provides programmatic access to manage
    projects within your available organizations.
  title: Quant administration API
  version: 2.0.0
servers:
- url: https://localhost:8001/api/v2
security:
- BearerAuth: []
paths:
  /organizations:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations_get_200_response'
          description: List all organizations accessible by the token
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: List organizations
      tags:
      - organizations
  /organizations/{organization}:
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations_get_200_response'
          description: Show an organizations details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get organization by machine name
      tags:
      - organizations
  /organizations/{organization}/projects:
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects_get_200_response'
          description: The project data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get projects for an organization
      tags:
      - projects
    post:
      parameters:
      - $ref: '#/components/parameters/organization'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects_get_200_response'
          description: The project data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Create a new project for an organization
      tags:
      - projects
  /organizations/{organization}/projects/{project}:
    delete:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects_get_200_response'
          description: The project data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Delete a project
      tags:
      - projects
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects_get_200_response'
          description: Show the project details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get project details
      tags:
      - projects
    patch:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects_get_200_response'
          description: The project data
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Update project details
      tags:
      - projects
  /organizations/{organization}/projects/{project}/crawlers:
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__crawlers_get_200_response'
          description: Get crawlers for a project
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get crawlers for a project
      tags:
      - crawlers
    post:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrawlerRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__crawlers_get_200_response'
          description: The created crawler
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Create a new crawler for a project
      tags:
      - crawlers
  /organizations/{organization}/projects/{project}/crawlers/{crawler}:
    delete:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/crawler'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__crawlers_get_200_response'
          description: The deleted crawler
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Delete a crawler
      tags:
      - crawlers
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/crawler'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__crawlers_get_200_response'
          description: Get crawler details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get crawler details
      tags:
      - crawlers
    patch:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/crawler'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrawlerRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__crawlers_get_200_response'
          description: The updated crawler
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Update crawler details
      tags:
      - crawlers
  /organizations/{organization}/projects/{project}/domains:
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__domains_get_200_response'
          description: List all projects for this organization
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: List domains for a project
      tags:
      - domains
    post:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__domains_get_200_response'
          description: The created domain
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Create a new domain for a project
      tags:
      - domains
  /organizations/{organization}/projects/{project}/domains/{domain}:
    delete:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/domain'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__domains_get_200_response'
          description: The deleted domain
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Delete a domain
      tags:
      - domains
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/domain'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__domains_get_200_response'
          description: Show the domain details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get domain details
      tags:
      - domains
    patch:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/domain'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__domains_get_200_response'
          description: The edited domain
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Update domain details
      tags:
      - domains
  /organizations/{organization}/projects/{project}/rules:
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: List all projects for this organization
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get rules for a project
      tags:
      - rules
  /organizations/{organization}/projects/{project}/rules/redirect:
    post:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleRedirectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Create a new redirect rule
      tags:
      - rules
  /organizations/{organization}/projects/{project}/rules/redirect/{rule}:
    delete:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Delete a redirect rule
      tags:
      - rules
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get redirect rule details
      tags:
      - rules
    patch:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleRedirectRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Update redirect rule details
      tags:
      - rules
  /organizations/{organization}/projects/{project}/rules/proxy:
    post:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleProxyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Update proxy rule details
      tags:
      - rules
  /organizations/{organization}/projects/{project}/rules/proxy/{rule}:
    delete:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Delete a proxy rule
      tags:
      - rules
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get proxy rule details
      tags:
      - rules
    patch:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleProxyRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Update proxy rule details
      tags:
      - rules
  /organizations/{organization}/projects/{project}/rules/auth:
    post:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleAuthRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Create authentication rules
      tags:
      - rules
  /organizations/{organization}/projects/{project}/rules/auth/{rule}:
    delete:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Delete an authentication rule
      tags:
      - rules
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get authentication rule details
      tags:
      - rules
    patch:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleAuthRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Update authentication rule details
      tags:
      - rules
  /organizations/{organization}/projects/{project}/rules/custom-response:
    patch:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleCustomResponseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Update custom response rule details
      tags:
      - rules
  /organizations/{organization}/projects/{project}/rules/custom-response/{rule}:
    delete:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Delete a custom response rule
      tags:
      - rules
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get custom repsonse rule details
      tags:
      - rules
    patch:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleCustomResponseRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Update custom response rule details
      tags:
      - rules
  /organizations/{organization}/projects/{project}/rules/header:
    patch:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleHeaderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Create header rules
      tags:
      - rules
  /organizations/{organization}/projects/{project}/rules/header/{rule}:
    delete:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Delete a header rule
      tags:
      - rules
    get:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Get header rule details
      tags:
      - rules
    patch:
      parameters:
      - $ref: '#/components/parameters/organization'
      - $ref: '#/components/parameters/project'
      - $ref: '#/components/parameters/rule'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RuleHeaderRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response'
          description: The rule details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad request
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Invalid token provided
      summary: Update header rule details
      tags:
      - rules
components:
  parameters:
    organization:
      description: Organization machine name
      explode: false
      in: path
      name: organization
      required: true
      schema: {}
      style: simple
    project:
      description: Project machine name
      explode: false
      in: path
      name: project
      required: true
      schema: {}
      style: simple
    crawler:
      description: Crawler uuid
      explode: false
      in: path
      name: crawler
      required: true
      schema: {}
      style: simple
    domain:
      explode: false
      in: path
      name: domain
      required: true
      schema: {}
      style: simple
    rule:
      explode: false
      in: path
      name: rule
      required: true
      schema: {}
      style: simple
  schemas:
    Error:
      properties:
        error:
          type: boolean
        message:
          type: string
        data:
          type: object
    Organization:
      example:
        organisation_machine_name: organisation_machine_name
        updated_at: updated_at
        name: name
        created_at: created_at
        subscrption: 0
        type: type
        region: region
      properties:
        name:
          type: string
        organisation_machine_name:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        subscrption:
          type: integer
        type:
          type: string
        region:
          type: string
    Project:
      example:
        project_type: project_type
        project_parent_id: 1
        created_at: created_at
        machine_name: machine_name
        deleted_at: deleted_at
        uuid: uuid
        organisation_id: 6
        updated_at: updated_at
        name: name
        security_score: 5
        id: 0
        region: region
        git_url: git_url
      properties:
        id:
          format: int64
          type: integer
        machine_name:
          type: string
        name:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        deleted_at:
          type: string
        organisation_id:
          format: int64
          type: integer
        uuid:
          format: int64
          type: string
        region:
          type: string
        project_type:
          type: string
        project_parent_id:
          type: integer
        security_score:
          type: integer
        git_url:
          type: string
    ProjectRequest:
      example:
        basic_auth_preview_only: basic_auth_preview_only
        allow_query_params: true
        basic_auth_password: basic_auth_password
        custom_s3_sync_region: custom_s3_sync_region
        custom_s3_sync_access_key: custom_s3_sync_access_key
        name: name
        basic_auth_username: basic_auth_username
        region: region
        custom_s3_sync_secret_key: custom_s3_sync_secret_key
        custom_s3_sync_bucket: custom_s3_sync_bucket
      properties:
        name:
          type: string
        region:
          type: string
        allow_query_params:
          type: boolean
        basic_auth_username:
          type: string
        basic_auth_password:
          type: string
        basic_auth_preview_only:
          type: string
        custom_s3_sync_bucket:
          type: string
        custom_s3_sync_region:
          type: string
        custom_s3_sync_access_key:
          type: string
        custom_s3_sync_secret_key:
          type: string
    Crawler:
      example:
        urls_list:
        - urls_list
        - urls_list
        updated_at: updated_at
        project_id: 6
        domain: domain
        created_at: created_at
        domain_verified: 1
        id: 0
        uuid: uuid
        config: config
        deleted_at: deleted_at
      properties:
        id:
          type: integer
        project_id:
          type: integer
        uuid:
          type: string
        config:
          type: string
        urls_list:
          items:
            type: string
          type: array
        created_at:
          type: string
        updated_at:
          type: string
        deleted_at:
          type: string
        domain:
          type: string
        domain_verified:
          type: integer
    CrawlerRequest:
      example:
        headers: "{}"
        url_list:
        - url_list
        - url_list
        domain: domain
        name: name
        browser_mode: true
      properties:
        name:
          type: string
        domain:
          type: string
        browser_mode:
          type: boolean
        url_list:
          items:
            type: string
          type: array
        headers:
          type: object
    Domain:
      example:
        updated_at: updated_at
        project_id: 6
        domain: domain
        dns_engaged: 5
        created_at: created_at
        id: 0
        deleted_at: deleted_at
        in_section: 1
        section_message: section_message
      properties:
        id:
          type: integer
        domain:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        deleted_at:
          type: string
        project_id:
          type: integer
        in_section:
          type: integer
        section_message:
          type: string
        dns_engaged:
          type: integer
    DomainRequest:
      example:
        headers: "{}"
        url_list:
        - url_list
        - url_list
        domain: domain
        name: name
        browser_mode: true
      properties:
        name:
          type: string
        domain:
          type: string
        browser_mode:
          type: boolean
        url_list:
          items:
            type: string
          type: array
        headers:
          type: object
    Rule:
      example:
        uuid: uuid
        config: "{}"
      properties:
        uuid:
          type: string
        config:
          type: object
    RuleRedirectRequest:
      example:
        country: country
        status_code: 0
        method: method
        ip_is_not:
        - ip_is_not
        - ip_is_not
        method_is:
        - method_is
        - method_is
        ip: ip
        only_with_cookie: only_with_cookie
        country_is:
        - country_is
        - country_is
        method_is_not:
        - method_is_not
        - method_is_not
        url: url
        country_is_not:
        - country_is_not
        - country_is_not
        domain: domain
        name: name
        ip_is:
        - ip_is
        - ip_is
        disabled: true
        to: to
      properties:
        domain:
          type: string
        country:
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
        only_with_cookie:
          type: string
        url:
          type: string
        name:
          type: string
        disabled:
          type: boolean
        to:
          type: string
        status_code:
          type: integer
    RuleProxyRequest:
      example:
        country: country
        cache_lifetime: 0
        method: method
        ip_is_not:
        - ip_is_not
        - ip_is_not
        strip_headers:
        - strip_headers
        - strip_headers
        method_is:
        - method_is
        - method_is
        ip: ip
        only_with_cookie: only_with_cookie
        country_is:
        - country_is
        - country_is
        method_is_not:
        - method_is_not
        - method_is_not
        url: url
        country_is_not:
        - country_is_not
        - country_is_not
        only_proxy_404: true
        auth_user: auth_user
        domain: domain
        name: name
        host: host
        waf_enabled: true
        ip_is:
        - ip_is
        - ip_is
        auth_pass: auth_pass
        disabled: true
        to: to
        disable_ssl_verify: true
        waf_config:
          mode: block
          allow_rules:
          - 1
          - 1
          httpbl:
            block_harvester: true
            httpbl_enabled: true
            block_spam: true
            block_search_engine: true
            block_suspicious: true
          notify_email: notify_email
          block_ip:
          - 5
          - 5
          block_referer:
          - block_referer
          - block_referer
          block_ua:
          - block_ua
          - block_ua
          notify_slack_hits_rpm: 2
          notify_slack: notify_slack
          paranoia_level: 6
          allow_ip:
          - 5
          - 5
      properties:
        domain:
          type: string
        country:
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
        only_with_cookie:
          type: string
        url:
          type: string
        name:
          type: string
        disabled:
          type: boolean
        to:
          type: string
        host:
          type: string
        auth_user:
          type: string
        auth_pass:
          type: string
        disable_ssl_verify:
          type: boolean
        cache_lifetime:
          type: integer
        only_proxy_404:
          type: boolean
        strip_headers:
          items:
            type: string
          type: array
        waf_enabled:
          type: boolean
        waf_config:
          $ref: '#/components/schemas/RuleProxyRequest_waf_config'
    RuleAuthRequest:
      example:
        country: country
        cache_lifetime: 0
        method: method
        ip_is_not:
        - ip_is_not
        - ip_is_not
        strip_headers:
        - strip_headers
        - strip_headers
        method_is:
        - method_is
        - method_is
        ip: ip
        only_with_cookie: only_with_cookie
        country_is:
        - country_is
        - country_is
        method_is_not:
        - method_is_not
        - method_is_not
        url: url
        country_is_not:
        - country_is_not
        - country_is_not
        only_proxy_404: true
        auth_user: auth_user
        domain: domain
        name: name
        host: host
        ip_is:
        - ip_is
        - ip_is
        auth_pass: auth_pass
        disabled: true
        to: to
        disable_ssl_verify: true
      properties:
        domain:
          type: string
        country:
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
        only_with_cookie:
          type: string
        url:
          type: string
        name:
          type: string
        disabled:
          type: boolean
        to:
          type: string
        host:
          type: string
        auth_user:
          type: string
        auth_pass:
          type: string
        disable_ssl_verify:
          type: boolean
        cache_lifetime:
          type: integer
        only_proxy_404:
          type: boolean
        strip_headers:
          items:
            type: string
          type: array
    RuleCustomResponseRequest:
      example:
        country: country
        cache_lifetime: 0
        method: method
        ip_is_not:
        - ip_is_not
        - ip_is_not
        strip_headers:
        - strip_headers
        - strip_headers
        custom_response_status_code: 6
        method_is:
        - method_is
        - method_is
        ip: ip
        only_with_cookie: only_with_cookie
        country_is:
        - country_is
        - country_is
        method_is_not:
        - method_is_not
        - method_is_not
        custom_response_body: custom_response_body
        url: url
        country_is_not:
        - country_is_not
        - country_is_not
        only_proxy_404: true
        auth_user: auth_user
        domain: domain
        name: name
        host: host
        ip_is:
        - ip_is
        - ip_is
        auth_pass: auth_pass
        disabled: true
        to: to
        disable_ssl_verify: true
      properties:
        domain:
          type: string
        country:
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
        only_with_cookie:
          type: string
        url:
          type: string
        name:
          type: string
        disabled:
          type: boolean
        to:
          type: string
        host:
          type: string
        auth_user:
          type: string
        auth_pass:
          type: string
        disable_ssl_verify:
          type: boolean
        cache_lifetime:
          type: integer
        only_proxy_404:
          type: boolean
        strip_headers:
          items:
            type: string
          type: array
        custom_response_status_code:
          type: integer
        custom_response_body:
          type: string
    RuleHeaderRequest:
      example:
        country: country
        cache_lifetime: 0
        method_is:
        - method_is
        - method_is
        method_is_not:
        - method_is_not
        - method_is_not
        custom_response_body: custom_response_body
        country_is_not:
        - country_is_not
        - country_is_not
        auth_user: auth_user
        host: host
        auth_pass: auth_pass
        disabled: true
        headers: "{}"
        method: method
        ip_is_not:
        - ip_is_not
        - ip_is_not
        strip_headers:
        - strip_headers
        - strip_headers
        custom_response_status_code: 6
        ip: ip
        only_with_cookie: only_with_cookie
        country_is:
        - country_is
        - country_is
        url: url
        only_proxy_404: true
        domain: domain
        name: name
        ip_is:
        - ip_is
        - ip_is
        to: to
        disable_ssl_verify: true
      properties:
        domain:
          type: string
        country:
          type: string
        country_is:
          items:
            type: string
          type: array
        country_is_not:
          items:
            type: string
          type: array
        method:
          type: string
        method_is:
          items:
            type: string
          type: array
        method_is_not:
          items:
            type: string
          type: array
        ip:
          type: string
        ip_is:
          items:
            type: string
          type: array
        ip_is_not:
          items:
            type: string
          type: array
        only_with_cookie:
          type: string
        url:
          type: string
        name:
          type: string
        disabled:
          type: boolean
        to:
          type: string
        host:
          type: string
        auth_user:
          type: string
        auth_pass:
          type: string
        disable_ssl_verify:
          type: boolean
        cache_lifetime:
          type: integer
        only_proxy_404:
          type: boolean
        strip_headers:
          items:
            type: string
          type: array
        custom_response_status_code:
          type: integer
        custom_response_body:
          type: string
        headers:
          type: object
    _organizations_get_200_response_data:
      example:
        organizations:
        - organisation_machine_name: organisation_machine_name
          updated_at: updated_at
          name: name
          created_at: created_at
          subscrption: 0
          type: type
          region: region
        - organisation_machine_name: organisation_machine_name
          updated_at: updated_at
          name: name
          created_at: created_at
          subscrption: 0
          type: type
          region: region
      properties:
        organizations:
          items:
            $ref: '#/components/schemas/Organization'
          type: array
    _organizations_get_200_response:
      example:
        data:
          organizations:
          - organisation_machine_name: organisation_machine_name
            updated_at: updated_at
            name: name
            created_at: created_at
            subscrption: 0
            type: type
            region: region
          - organisation_machine_name: organisation_machine_name
            updated_at: updated_at
            name: name
            created_at: created_at
            subscrption: 0
            type: type
            region: region
      properties:
        data:
          $ref: '#/components/schemas/_organizations_get_200_response_data'
    _organizations__organization__projects_get_200_response_data:
      example:
        projects:
        - project_type: project_type
          project_parent_id: 1
          created_at: created_at
          machine_name: machine_name
          deleted_at: deleted_at
          uuid: uuid
          organisation_id: 6
          updated_at: updated_at
          name: name
          security_score: 5
          id: 0
          region: region
          git_url: git_url
        - project_type: project_type
          project_parent_id: 1
          created_at: created_at
          machine_name: machine_name
          deleted_at: deleted_at
          uuid: uuid
          organisation_id: 6
          updated_at: updated_at
          name: name
          security_score: 5
          id: 0
          region: region
          git_url: git_url
      properties:
        projects:
          items:
            $ref: '#/components/schemas/Project'
          type: array
    _organizations__organization__projects_get_200_response:
      example:
        data:
          projects:
          - project_type: project_type
            project_parent_id: 1
            created_at: created_at
            machine_name: machine_name
            deleted_at: deleted_at
            uuid: uuid
            organisation_id: 6
            updated_at: updated_at
            name: name
            security_score: 5
            id: 0
            region: region
            git_url: git_url
          - project_type: project_type
            project_parent_id: 1
            created_at: created_at
            machine_name: machine_name
            deleted_at: deleted_at
            uuid: uuid
            organisation_id: 6
            updated_at: updated_at
            name: name
            security_score: 5
            id: 0
            region: region
            git_url: git_url
      properties:
        data:
          $ref: '#/components/schemas/_organizations__organization__projects_get_200_response_data'
    _organizations__organization__projects__project__crawlers_get_200_response_data:
      example:
        crawlers:
        - urls_list:
          - urls_list
          - urls_list
          updated_at: updated_at
          project_id: 6
          domain: domain
          created_at: created_at
          domain_verified: 1
          id: 0
          uuid: uuid
          config: config
          deleted_at: deleted_at
        - urls_list:
          - urls_list
          - urls_list
          updated_at: updated_at
          project_id: 6
          domain: domain
          created_at: created_at
          domain_verified: 1
          id: 0
          uuid: uuid
          config: config
          deleted_at: deleted_at
      properties:
        crawlers:
          items:
            $ref: '#/components/schemas/Crawler'
          type: array
    _organizations__organization__projects__project__crawlers_get_200_response:
      example:
        data:
          crawlers:
          - urls_list:
            - urls_list
            - urls_list
            updated_at: updated_at
            project_id: 6
            domain: domain
            created_at: created_at
            domain_verified: 1
            id: 0
            uuid: uuid
            config: config
            deleted_at: deleted_at
          - urls_list:
            - urls_list
            - urls_list
            updated_at: updated_at
            project_id: 6
            domain: domain
            created_at: created_at
            domain_verified: 1
            id: 0
            uuid: uuid
            config: config
            deleted_at: deleted_at
      properties:
        data:
          $ref: '#/components/schemas/_organizations__organization__projects__project__crawlers_get_200_response_data'
    _organizations__organization__projects__project__domains_get_200_response_data:
      example:
        domains:
        - updated_at: updated_at
          project_id: 6
          domain: domain
          dns_engaged: 5
          created_at: created_at
          id: 0
          deleted_at: deleted_at
          in_section: 1
          section_message: section_message
        - updated_at: updated_at
          project_id: 6
          domain: domain
          dns_engaged: 5
          created_at: created_at
          id: 0
          deleted_at: deleted_at
          in_section: 1
          section_message: section_message
      properties:
        domains:
          items:
            $ref: '#/components/schemas/Domain'
          type: array
    _organizations__organization__projects__project__domains_get_200_response:
      example:
        data:
          domains:
          - updated_at: updated_at
            project_id: 6
            domain: domain
            dns_engaged: 5
            created_at: created_at
            id: 0
            deleted_at: deleted_at
            in_section: 1
            section_message: section_message
          - updated_at: updated_at
            project_id: 6
            domain: domain
            dns_engaged: 5
            created_at: created_at
            id: 0
            deleted_at: deleted_at
            in_section: 1
            section_message: section_message
      properties:
        data:
          $ref: '#/components/schemas/_organizations__organization__projects__project__domains_get_200_response_data'
    _organizations__organization__projects__project__rules_get_200_response_data:
      example:
        rules:
        - uuid: uuid
          config: "{}"
        - uuid: uuid
          config: "{}"
      properties:
        rules:
          items:
            $ref: '#/components/schemas/Rule'
          type: array
    _organizations__organization__projects__project__rules_get_200_response:
      example:
        data:
          rules:
          - uuid: uuid
            config: "{}"
          - uuid: uuid
            config: "{}"
      properties:
        data:
          $ref: '#/components/schemas/_organizations__organization__projects__project__rules_get_200_response_data'
    RuleProxyRequest_waf_config_httpbl:
      example:
        block_harvester: true
        httpbl_enabled: true
        block_spam: true
        block_search_engine: true
        block_suspicious: true
      properties:
        httpbl_enabled:
          type: boolean
        block_suspicious:
          type: boolean
        block_harvester:
          type: boolean
        block_spam:
          type: boolean
        block_search_engine:
          type: boolean
    RuleProxyRequest_waf_config:
      example:
        mode: block
        allow_rules:
        - 1
        - 1
        httpbl:
          block_harvester: true
          httpbl_enabled: true
          block_spam: true
          block_search_engine: true
          block_suspicious: true
        notify_email: notify_email
        block_ip:
        - 5
        - 5
        block_referer:
        - block_referer
        - block_referer
        block_ua:
        - block_ua
        - block_ua
        notify_slack_hits_rpm: 2
        notify_slack: notify_slack
        paranoia_level: 6
        allow_ip:
        - 5
        - 5
      properties:
        mode:
          enum:
          - block
          - report
          type: string
        paranoia_level:
          type: integer
        allow_rules:
          items:
            type: integer
          type: array
        allow_ip:
          items:
            type: integer
          type: array
        block_ip:
          items:
            type: integer
          type: array
        block_ua:
          items:
            type: string
          type: array
        block_referer:
          items:
            type: string
          type: array
        notify_slack:
          type: string
        notify_slack_hits_rpm:
          type: integer
        notify_email:
          type: string
        httpbl:
          $ref: '#/components/schemas/RuleProxyRequest_waf_config_httpbl'
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
