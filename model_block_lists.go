/*
QuantCDN Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the BlockLists type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BlockLists{}

// BlockLists struct for BlockLists
type BlockLists struct {
	Referer *bool `json:"referer,omitempty"`
	Ip *bool `json:"ip,omitempty"`
	UserAgent *bool `json:"user_agent,omitempty"`
	Ai *bool `json:"ai,omitempty"`
}

// NewBlockLists instantiates a new BlockLists object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBlockLists() *BlockLists {
	this := BlockLists{}
	var referer bool = false
	this.Referer = &referer
	var ip bool = false
	this.Ip = &ip
	var userAgent bool = false
	this.UserAgent = &userAgent
	var ai bool = false
	this.Ai = &ai
	return &this
}

// NewBlockListsWithDefaults instantiates a new BlockLists object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBlockListsWithDefaults() *BlockLists {
	this := BlockLists{}
	var referer bool = false
	this.Referer = &referer
	var ip bool = false
	this.Ip = &ip
	var userAgent bool = false
	this.UserAgent = &userAgent
	var ai bool = false
	this.Ai = &ai
	return &this
}

// GetReferer returns the Referer field value if set, zero value otherwise.
func (o *BlockLists) GetReferer() bool {
	if o == nil || IsNil(o.Referer) {
		var ret bool
		return ret
	}
	return *o.Referer
}

// GetRefererOk returns a tuple with the Referer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockLists) GetRefererOk() (*bool, bool) {
	if o == nil || IsNil(o.Referer) {
		return nil, false
	}
	return o.Referer, true
}

// HasReferer returns a boolean if a field has been set.
func (o *BlockLists) HasReferer() bool {
	if o != nil && !IsNil(o.Referer) {
		return true
	}

	return false
}

// SetReferer gets a reference to the given bool and assigns it to the Referer field.
func (o *BlockLists) SetReferer(v bool) {
	o.Referer = &v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *BlockLists) GetIp() bool {
	if o == nil || IsNil(o.Ip) {
		var ret bool
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockLists) GetIpOk() (*bool, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *BlockLists) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given bool and assigns it to the Ip field.
func (o *BlockLists) SetIp(v bool) {
	o.Ip = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *BlockLists) GetUserAgent() bool {
	if o == nil || IsNil(o.UserAgent) {
		var ret bool
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockLists) GetUserAgentOk() (*bool, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *BlockLists) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given bool and assigns it to the UserAgent field.
func (o *BlockLists) SetUserAgent(v bool) {
	o.UserAgent = &v
}

// GetAi returns the Ai field value if set, zero value otherwise.
func (o *BlockLists) GetAi() bool {
	if o == nil || IsNil(o.Ai) {
		var ret bool
		return ret
	}
	return *o.Ai
}

// GetAiOk returns a tuple with the Ai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BlockLists) GetAiOk() (*bool, bool) {
	if o == nil || IsNil(o.Ai) {
		return nil, false
	}
	return o.Ai, true
}

// HasAi returns a boolean if a field has been set.
func (o *BlockLists) HasAi() bool {
	if o != nil && !IsNil(o.Ai) {
		return true
	}

	return false
}

// SetAi gets a reference to the given bool and assigns it to the Ai field.
func (o *BlockLists) SetAi(v bool) {
	o.Ai = &v
}

func (o BlockLists) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BlockLists) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Referer) {
		toSerialize["referer"] = o.Referer
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.UserAgent) {
		toSerialize["user_agent"] = o.UserAgent
	}
	if !IsNil(o.Ai) {
		toSerialize["ai"] = o.Ai
	}
	return toSerialize, nil
}

type NullableBlockLists struct {
	value *BlockLists
	isSet bool
}

func (v NullableBlockLists) Get() *BlockLists {
	return v.value
}

func (v *NullableBlockLists) Set(val *BlockLists) {
	v.value = val
	v.isSet = true
}

func (v NullableBlockLists) IsSet() bool {
	return v.isSet
}

func (v *NullableBlockLists) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBlockLists(val *BlockLists) *NullableBlockLists {
	return &NullableBlockLists{value: val, isSet: true}
}

func (v NullableBlockLists) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBlockLists) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


