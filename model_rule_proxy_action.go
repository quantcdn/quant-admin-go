/*
QuantCDN Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// checks if the RuleProxyAction type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RuleProxyAction{}

// RuleProxyAction struct for RuleProxyAction
type RuleProxyAction struct {
	Proxy ProxyConfig `json:"proxy"`
	Failover *FailoverConfig `json:"failover,omitempty"`
	Notify *string `json:"notify,omitempty"`
	NotifyConfig *NotifyConfig `json:"notify_config,omitempty"`
	WafEnabled bool `json:"waf_enabled"`
	WafConfig *WAFConfig `json:"waf_config,omitempty"`
	ProxyAlertEnabled *bool `json:"proxy_alert_enabled,omitempty"`
	ProxyInlineFnEnabled *bool `json:"proxy_inline_fn_enabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RuleProxyAction RuleProxyAction

// NewRuleProxyAction instantiates a new RuleProxyAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuleProxyAction(proxy ProxyConfig, wafEnabled bool) *RuleProxyAction {
	this := RuleProxyAction{}
	this.Proxy = proxy
	this.WafEnabled = wafEnabled
	var proxyInlineFnEnabled bool = false
	this.ProxyInlineFnEnabled = &proxyInlineFnEnabled
	return &this
}

// NewRuleProxyActionWithDefaults instantiates a new RuleProxyAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuleProxyActionWithDefaults() *RuleProxyAction {
	this := RuleProxyAction{}
	var wafEnabled bool = false
	this.WafEnabled = wafEnabled
	var proxyInlineFnEnabled bool = false
	this.ProxyInlineFnEnabled = &proxyInlineFnEnabled
	return &this
}

// GetProxy returns the Proxy field value
func (o *RuleProxyAction) GetProxy() ProxyConfig {
	if o == nil {
		var ret ProxyConfig
		return ret
	}

	return o.Proxy
}

// GetProxyOk returns a tuple with the Proxy field value
// and a boolean to check if the value has been set.
func (o *RuleProxyAction) GetProxyOk() (*ProxyConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Proxy, true
}

// SetProxy sets field value
func (o *RuleProxyAction) SetProxy(v ProxyConfig) {
	o.Proxy = v
}

// GetFailover returns the Failover field value if set, zero value otherwise.
func (o *RuleProxyAction) GetFailover() FailoverConfig {
	if o == nil || IsNil(o.Failover) {
		var ret FailoverConfig
		return ret
	}
	return *o.Failover
}

// GetFailoverOk returns a tuple with the Failover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyAction) GetFailoverOk() (*FailoverConfig, bool) {
	if o == nil || IsNil(o.Failover) {
		return nil, false
	}
	return o.Failover, true
}

// HasFailover returns a boolean if a field has been set.
func (o *RuleProxyAction) HasFailover() bool {
	if o != nil && !IsNil(o.Failover) {
		return true
	}

	return false
}

// SetFailover gets a reference to the given FailoverConfig and assigns it to the Failover field.
func (o *RuleProxyAction) SetFailover(v FailoverConfig) {
	o.Failover = &v
}

// GetNotify returns the Notify field value if set, zero value otherwise.
func (o *RuleProxyAction) GetNotify() string {
	if o == nil || IsNil(o.Notify) {
		var ret string
		return ret
	}
	return *o.Notify
}

// GetNotifyOk returns a tuple with the Notify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyAction) GetNotifyOk() (*string, bool) {
	if o == nil || IsNil(o.Notify) {
		return nil, false
	}
	return o.Notify, true
}

// HasNotify returns a boolean if a field has been set.
func (o *RuleProxyAction) HasNotify() bool {
	if o != nil && !IsNil(o.Notify) {
		return true
	}

	return false
}

// SetNotify gets a reference to the given string and assigns it to the Notify field.
func (o *RuleProxyAction) SetNotify(v string) {
	o.Notify = &v
}

// GetNotifyConfig returns the NotifyConfig field value if set, zero value otherwise.
func (o *RuleProxyAction) GetNotifyConfig() NotifyConfig {
	if o == nil || IsNil(o.NotifyConfig) {
		var ret NotifyConfig
		return ret
	}
	return *o.NotifyConfig
}

// GetNotifyConfigOk returns a tuple with the NotifyConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyAction) GetNotifyConfigOk() (*NotifyConfig, bool) {
	if o == nil || IsNil(o.NotifyConfig) {
		return nil, false
	}
	return o.NotifyConfig, true
}

// HasNotifyConfig returns a boolean if a field has been set.
func (o *RuleProxyAction) HasNotifyConfig() bool {
	if o != nil && !IsNil(o.NotifyConfig) {
		return true
	}

	return false
}

// SetNotifyConfig gets a reference to the given NotifyConfig and assigns it to the NotifyConfig field.
func (o *RuleProxyAction) SetNotifyConfig(v NotifyConfig) {
	o.NotifyConfig = &v
}

// GetWafEnabled returns the WafEnabled field value
func (o *RuleProxyAction) GetWafEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.WafEnabled
}

// GetWafEnabledOk returns a tuple with the WafEnabled field value
// and a boolean to check if the value has been set.
func (o *RuleProxyAction) GetWafEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WafEnabled, true
}

// SetWafEnabled sets field value
func (o *RuleProxyAction) SetWafEnabled(v bool) {
	o.WafEnabled = v
}

// GetWafConfig returns the WafConfig field value if set, zero value otherwise.
func (o *RuleProxyAction) GetWafConfig() WAFConfig {
	if o == nil || IsNil(o.WafConfig) {
		var ret WAFConfig
		return ret
	}
	return *o.WafConfig
}

// GetWafConfigOk returns a tuple with the WafConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyAction) GetWafConfigOk() (*WAFConfig, bool) {
	if o == nil || IsNil(o.WafConfig) {
		return nil, false
	}
	return o.WafConfig, true
}

// HasWafConfig returns a boolean if a field has been set.
func (o *RuleProxyAction) HasWafConfig() bool {
	if o != nil && !IsNil(o.WafConfig) {
		return true
	}

	return false
}

// SetWafConfig gets a reference to the given WAFConfig and assigns it to the WafConfig field.
func (o *RuleProxyAction) SetWafConfig(v WAFConfig) {
	o.WafConfig = &v
}

// GetProxyAlertEnabled returns the ProxyAlertEnabled field value if set, zero value otherwise.
func (o *RuleProxyAction) GetProxyAlertEnabled() bool {
	if o == nil || IsNil(o.ProxyAlertEnabled) {
		var ret bool
		return ret
	}
	return *o.ProxyAlertEnabled
}

// GetProxyAlertEnabledOk returns a tuple with the ProxyAlertEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyAction) GetProxyAlertEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ProxyAlertEnabled) {
		return nil, false
	}
	return o.ProxyAlertEnabled, true
}

// HasProxyAlertEnabled returns a boolean if a field has been set.
func (o *RuleProxyAction) HasProxyAlertEnabled() bool {
	if o != nil && !IsNil(o.ProxyAlertEnabled) {
		return true
	}

	return false
}

// SetProxyAlertEnabled gets a reference to the given bool and assigns it to the ProxyAlertEnabled field.
func (o *RuleProxyAction) SetProxyAlertEnabled(v bool) {
	o.ProxyAlertEnabled = &v
}

// GetProxyInlineFnEnabled returns the ProxyInlineFnEnabled field value if set, zero value otherwise.
func (o *RuleProxyAction) GetProxyInlineFnEnabled() bool {
	if o == nil || IsNil(o.ProxyInlineFnEnabled) {
		var ret bool
		return ret
	}
	return *o.ProxyInlineFnEnabled
}

// GetProxyInlineFnEnabledOk returns a tuple with the ProxyInlineFnEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuleProxyAction) GetProxyInlineFnEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ProxyInlineFnEnabled) {
		return nil, false
	}
	return o.ProxyInlineFnEnabled, true
}

// HasProxyInlineFnEnabled returns a boolean if a field has been set.
func (o *RuleProxyAction) HasProxyInlineFnEnabled() bool {
	if o != nil && !IsNil(o.ProxyInlineFnEnabled) {
		return true
	}

	return false
}

// SetProxyInlineFnEnabled gets a reference to the given bool and assigns it to the ProxyInlineFnEnabled field.
func (o *RuleProxyAction) SetProxyInlineFnEnabled(v bool) {
	o.ProxyInlineFnEnabled = &v
}

func (o RuleProxyAction) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RuleProxyAction) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["proxy"] = o.Proxy
	if !IsNil(o.Failover) {
		toSerialize["failover"] = o.Failover
	}
	if !IsNil(o.Notify) {
		toSerialize["notify"] = o.Notify
	}
	if !IsNil(o.NotifyConfig) {
		toSerialize["notify_config"] = o.NotifyConfig
	}
	toSerialize["waf_enabled"] = o.WafEnabled
	if !IsNil(o.WafConfig) {
		toSerialize["waf_config"] = o.WafConfig
	}
	if !IsNil(o.ProxyAlertEnabled) {
		toSerialize["proxy_alert_enabled"] = o.ProxyAlertEnabled
	}
	if !IsNil(o.ProxyInlineFnEnabled) {
		toSerialize["proxy_inline_fn_enabled"] = o.ProxyInlineFnEnabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RuleProxyAction) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"proxy",
		"waf_enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRuleProxyAction := _RuleProxyAction{}

	err = json.Unmarshal(data, &varRuleProxyAction)

	if err != nil {
		return err
	}

	*o = RuleProxyAction(varRuleProxyAction)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "proxy")
		delete(additionalProperties, "failover")
		delete(additionalProperties, "notify")
		delete(additionalProperties, "notify_config")
		delete(additionalProperties, "waf_enabled")
		delete(additionalProperties, "waf_config")
		delete(additionalProperties, "proxy_alert_enabled")
		delete(additionalProperties, "proxy_inline_fn_enabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableRuleProxyAction struct {
	value *RuleProxyAction
	isSet bool
}

func (v NullableRuleProxyAction) Get() *RuleProxyAction {
	return v.value
}

func (v *NullableRuleProxyAction) Set(val *RuleProxyAction) {
	v.value = val
	v.isSet = true
}

func (v NullableRuleProxyAction) IsSet() bool {
	return v.isSet
}

func (v *NullableRuleProxyAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuleProxyAction(val *RuleProxyAction) *NullableRuleProxyAction {
	return &NullableRuleProxyAction{value: val, isSet: true}
}

func (v NullableRuleProxyAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuleProxyAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


