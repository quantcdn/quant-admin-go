/*
Quant administration API

The Quant administration API provides programmatic access to manage projects within your available organizations. 

API version: 2.0.0
Contact: apiteam@quantcdn.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData{}

// OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData struct for OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData
type OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData struct {
	Crawlers []Crawler `json:"crawlers,omitempty"`
}

// NewOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData instantiates a new OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData() *OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData {
	this := OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData{}
	return &this
}

// NewOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseDataWithDefaults instantiates a new OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseDataWithDefaults() *OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData {
	this := OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData{}
	return &this
}

// GetCrawlers returns the Crawlers field value if set, zero value otherwise.
func (o *OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) GetCrawlers() []Crawler {
	if o == nil || IsNil(o.Crawlers) {
		var ret []Crawler
		return ret
	}
	return o.Crawlers
}

// GetCrawlersOk returns a tuple with the Crawlers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) GetCrawlersOk() ([]Crawler, bool) {
	if o == nil || IsNil(o.Crawlers) {
		return nil, false
	}
	return o.Crawlers, true
}

// HasCrawlers returns a boolean if a field has been set.
func (o *OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) HasCrawlers() bool {
	if o != nil && !IsNil(o.Crawlers) {
		return true
	}

	return false
}

// SetCrawlers gets a reference to the given []Crawler and assigns it to the Crawlers field.
func (o *OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) SetCrawlers(v []Crawler) {
	o.Crawlers = v
}

func (o OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Crawlers) {
		toSerialize["crawlers"] = o.Crawlers
	}
	return toSerialize, nil
}

type NullableOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData struct {
	value *OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData
	isSet bool
}

func (v NullableOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) Get() *OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData {
	return v.value
}

func (v *NullableOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) Set(val *OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData(val *OrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) *NullableOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData {
	return &NullableOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData{value: val, isSet: true}
}

func (v NullableOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationsOrganizationProjectsProjectCrawlersGet200ResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


