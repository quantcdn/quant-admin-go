/*
QuantCDN Dashboard API

Provides programmatic interface for projects within QuantCDN

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DomainCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DomainCreate{}

// DomainCreate struct for DomainCreate
type DomainCreate struct {
	Domain string `json:"domain"`
}

// NewDomainCreate instantiates a new DomainCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainCreate(domain string) *DomainCreate {
	this := DomainCreate{}
	this.Domain = domain
	return &this
}

// NewDomainCreateWithDefaults instantiates a new DomainCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainCreateWithDefaults() *DomainCreate {
	this := DomainCreate{}
	return &this
}

// GetDomain returns the Domain field value
func (o *DomainCreate) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *DomainCreate) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *DomainCreate) SetDomain(v string) {
	o.Domain = v
}

func (o DomainCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DomainCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["domain"] = o.Domain
	return toSerialize, nil
}

type NullableDomainCreate struct {
	value *DomainCreate
	isSet bool
}

func (v NullableDomainCreate) Get() *DomainCreate {
	return v.value
}

func (v *NullableDomainCreate) Set(val *DomainCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainCreate(val *DomainCreate) *NullableDomainCreate {
	return &NullableDomainCreate{value: val, isSet: true}
}

func (v NullableDomainCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


