/*
QuantCDN Admin API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 0.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package quantadmingo

import (
	"encoding/json"
)

// checks if the FailoverConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FailoverConfig{}

// FailoverConfig struct for FailoverConfig
type FailoverConfig struct {
	FailoverMode *string `json:"failover_mode,omitempty"`
	FailoverOriginTtfb *string `json:"failover_origin_ttfb,omitempty"`
	FailoverOriginStatusCodes []string `json:"failover_origin_status_codes,omitempty"`
	FailoverLifetime *string `json:"failover_lifetime,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FailoverConfig FailoverConfig

// NewFailoverConfig instantiates a new FailoverConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFailoverConfig() *FailoverConfig {
	this := FailoverConfig{}
	var failoverOriginTtfb string = "2000"
	this.FailoverOriginTtfb = &failoverOriginTtfb
	var failoverLifetime string = "300"
	this.FailoverLifetime = &failoverLifetime
	return &this
}

// NewFailoverConfigWithDefaults instantiates a new FailoverConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFailoverConfigWithDefaults() *FailoverConfig {
	this := FailoverConfig{}
	var failoverOriginTtfb string = "2000"
	this.FailoverOriginTtfb = &failoverOriginTtfb
	var failoverLifetime string = "300"
	this.FailoverLifetime = &failoverLifetime
	return &this
}

// GetFailoverMode returns the FailoverMode field value if set, zero value otherwise.
func (o *FailoverConfig) GetFailoverMode() string {
	if o == nil || IsNil(o.FailoverMode) {
		var ret string
		return ret
	}
	return *o.FailoverMode
}

// GetFailoverModeOk returns a tuple with the FailoverMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FailoverConfig) GetFailoverModeOk() (*string, bool) {
	if o == nil || IsNil(o.FailoverMode) {
		return nil, false
	}
	return o.FailoverMode, true
}

// HasFailoverMode returns a boolean if a field has been set.
func (o *FailoverConfig) HasFailoverMode() bool {
	if o != nil && !IsNil(o.FailoverMode) {
		return true
	}

	return false
}

// SetFailoverMode gets a reference to the given string and assigns it to the FailoverMode field.
func (o *FailoverConfig) SetFailoverMode(v string) {
	o.FailoverMode = &v
}

// GetFailoverOriginTtfb returns the FailoverOriginTtfb field value if set, zero value otherwise.
func (o *FailoverConfig) GetFailoverOriginTtfb() string {
	if o == nil || IsNil(o.FailoverOriginTtfb) {
		var ret string
		return ret
	}
	return *o.FailoverOriginTtfb
}

// GetFailoverOriginTtfbOk returns a tuple with the FailoverOriginTtfb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FailoverConfig) GetFailoverOriginTtfbOk() (*string, bool) {
	if o == nil || IsNil(o.FailoverOriginTtfb) {
		return nil, false
	}
	return o.FailoverOriginTtfb, true
}

// HasFailoverOriginTtfb returns a boolean if a field has been set.
func (o *FailoverConfig) HasFailoverOriginTtfb() bool {
	if o != nil && !IsNil(o.FailoverOriginTtfb) {
		return true
	}

	return false
}

// SetFailoverOriginTtfb gets a reference to the given string and assigns it to the FailoverOriginTtfb field.
func (o *FailoverConfig) SetFailoverOriginTtfb(v string) {
	o.FailoverOriginTtfb = &v
}

// GetFailoverOriginStatusCodes returns the FailoverOriginStatusCodes field value if set, zero value otherwise.
func (o *FailoverConfig) GetFailoverOriginStatusCodes() []string {
	if o == nil || IsNil(o.FailoverOriginStatusCodes) {
		var ret []string
		return ret
	}
	return o.FailoverOriginStatusCodes
}

// GetFailoverOriginStatusCodesOk returns a tuple with the FailoverOriginStatusCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FailoverConfig) GetFailoverOriginStatusCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.FailoverOriginStatusCodes) {
		return nil, false
	}
	return o.FailoverOriginStatusCodes, true
}

// HasFailoverOriginStatusCodes returns a boolean if a field has been set.
func (o *FailoverConfig) HasFailoverOriginStatusCodes() bool {
	if o != nil && !IsNil(o.FailoverOriginStatusCodes) {
		return true
	}

	return false
}

// SetFailoverOriginStatusCodes gets a reference to the given []string and assigns it to the FailoverOriginStatusCodes field.
func (o *FailoverConfig) SetFailoverOriginStatusCodes(v []string) {
	o.FailoverOriginStatusCodes = v
}

// GetFailoverLifetime returns the FailoverLifetime field value if set, zero value otherwise.
func (o *FailoverConfig) GetFailoverLifetime() string {
	if o == nil || IsNil(o.FailoverLifetime) {
		var ret string
		return ret
	}
	return *o.FailoverLifetime
}

// GetFailoverLifetimeOk returns a tuple with the FailoverLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FailoverConfig) GetFailoverLifetimeOk() (*string, bool) {
	if o == nil || IsNil(o.FailoverLifetime) {
		return nil, false
	}
	return o.FailoverLifetime, true
}

// HasFailoverLifetime returns a boolean if a field has been set.
func (o *FailoverConfig) HasFailoverLifetime() bool {
	if o != nil && !IsNil(o.FailoverLifetime) {
		return true
	}

	return false
}

// SetFailoverLifetime gets a reference to the given string and assigns it to the FailoverLifetime field.
func (o *FailoverConfig) SetFailoverLifetime(v string) {
	o.FailoverLifetime = &v
}

func (o FailoverConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FailoverConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FailoverMode) {
		toSerialize["failover_mode"] = o.FailoverMode
	}
	if !IsNil(o.FailoverOriginTtfb) {
		toSerialize["failover_origin_ttfb"] = o.FailoverOriginTtfb
	}
	if !IsNil(o.FailoverOriginStatusCodes) {
		toSerialize["failover_origin_status_codes"] = o.FailoverOriginStatusCodes
	}
	if !IsNil(o.FailoverLifetime) {
		toSerialize["failover_lifetime"] = o.FailoverLifetime
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FailoverConfig) UnmarshalJSON(data []byte) (err error) {
	varFailoverConfig := _FailoverConfig{}

	err = json.Unmarshal(data, &varFailoverConfig)

	if err != nil {
		return err
	}

	*o = FailoverConfig(varFailoverConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "failover_mode")
		delete(additionalProperties, "failover_origin_ttfb")
		delete(additionalProperties, "failover_origin_status_codes")
		delete(additionalProperties, "failover_lifetime")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFailoverConfig struct {
	value *FailoverConfig
	isSet bool
}

func (v NullableFailoverConfig) Get() *FailoverConfig {
	return v.value
}

func (v *NullableFailoverConfig) Set(val *FailoverConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableFailoverConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableFailoverConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFailoverConfig(val *FailoverConfig) *NullableFailoverConfig {
	return &NullableFailoverConfig{value: val, isSet: true}
}

func (v NullableFailoverConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFailoverConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


